<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:s="http://www.fsn.shcp.gob/schema/service"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd                            
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                           http://www.fsn.shcp.gob/schema/service http://www.fsn.shcp.gob/schema/service/service.xsd">
    
    <!-- AOP SERVICE DEFINITION (logging, throwing, auditing, profiling interceptors) -->
    <aop:config>
        <aop:aspect ref="loggingMethodInterceptor">
            <aop:before pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)" method="beforeInvoking"/>
            <aop:after-returning pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)"
                                 method="afterReturning" returning="returnValue"/>
            <aop:after-throwing pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)"
                                method="afterThrowing" throwing="exception"/>
        </aop:aspect>
        <aop:aspect ref="throwableMethodInterceptor">
            <aop:after-throwing pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and target(object)" 
                                method="afterThrowing" throwing="exception"/>
        </aop:aspect>
        
        <!-- SCM:auditing -->
        <!-- <aop:aspect ref="auditableMethodInterceptor">
        <aop:before          pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)" method="beforeInvoking"/>
        <aop:after-returning pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)" method="afterReturning" returning="returnValue"/>
        <aop:after-throwing  pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)" method="afterThrowing"  throwing="exception"/>
        </aop:aspect> -->
        
        <!-- SCM:auditing -->
        
        <!-- SCM:profiling -->
        <!-- <aop:aspect ref="profilingMethodInterceptor">
        <aop:around          pointcut="execution(public * gob.shcp.sireh.service..*Service.*(..)) and within(gob.shcp.sireh.service..*BS) and target(object)" method="aroundExecuting"/>
        </aop:aspect> -->
        
        <!-- SCM:profiling -->
    </aop:config>
</beans>
