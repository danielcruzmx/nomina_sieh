<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:s="http://www.fsn.shcp.gob/schema/service"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.fsn.shcp.gob/schema/service http://www.fsn.shcp.gob/schema/service/service.xsd">

    <!-- CATALOGOS -->
    <import resource="view-sql-defs-catalogos.xml"/>
    
    <!-- PLAZAS -->
    <import resource="view-sql-defs-plazas.xml"/>
    
    <!-- PLAZAS - CONSULTAS -->
    <import resource="view-sql-defs-plazas-consultas.xml"/>
    
    <!-- CLC -->
    <import resource="view-sql-defs-clc.xml"/>
    
    <!-- DROOLS -->
    <import resource="view-sql-defs-drools.xml"/>
    
    <!-- TERCEROS -->
    <import resource="view-sql-defs-terceros.xml"/>
    
    <!-- EXPEDIENTE -->
    <import resource="view-sql-defs-expediente.xml"/>
    
    <!-- SPC -->
    <import resource="view-sql-defs-spc.xml"/>
    
    <!-- REPORTES -->
    <import resource="view-sql-defs-reportes.xml"/>
    
    <!-- PLAZAS MASIVAS -->
    <import resource="view-sql-defs-masivos-plazas.xml"/>
    
    <!-- RUSP -->
    <import resource="view-sql-defs-rusp.xml"/>
    
    <!-- QUERY DEFINITIONS -->
    <bean class="gob.shcp.fsn.service.factory.holder.ViewComponentQueriesHolder">
        <property name="viewComponentQueryDefinitions">
            <props>
                <!-- Query Helper -->
                <prop key="SIREHUNIDAD">
                    select id_unidad from tc_unidad where ##id_unidad##
                </prop>
                
                <!--Consulta General de empleados-->
                <prop key="Empleados">
                    SELECT e.rfc_unico, e.rfc_empleado, e.primer_apellido, e.segundo_apellido,
                           e.nombre_empleado, e.curp_empleado, e.imss_issste, e.ingreso_gob_fed,
                           e.ingreso_dependencia, e.clabe_empleado, p.id_plaza, p.id_puesto_nom,
                           p.id_zona_dist_nom
                      FROM td_empleado e, td_plaza p, tc_unidad u
                     WHERE e.id_plaza_vigente = p.id_plaza
                       AND u.id_unidad = p.id_unidad_nom
                       AND e.rfc_empleado = p.plaza_rfc
                       AND ##e.RFC_EMPLEADO## 
                       AND ##e.NOMBRE_EMPLEADO## 
                       AND ##e.PRIMER_APELLIDO## 
                       AND ##e.SEGUNDO_APELLIDO## 
                       AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                
                <prop key="EmpleadosHis">
                    SELECT e.rfc_unico, e.rfc_empleado, e.primer_apellido, e.segundo_apellido,
                           e.nombre_empleado, e.curp_empleado, e.imss_issste, e.ingreso_gob_fed,
                           e.ingreso_dependencia, e.clabe_empleado
                      FROM td_empleado e
                     WHERE LENGTH (e.rfc_unico) = 13
                       AND ##e.RFC_EMPLEADO## 
                       AND ##e.NOMBRE_EMPLEADO## 
                       AND ##e.PRIMER_APELLIDO## 
                       AND ##e.SEGUNDO_APELLIDO## 
                </prop>

                <prop key="EmpleadosDetalle">
                    select e.RFC_EMPLEADO,
                           e.NOMBRE_EMPLEADO,
                           e.PRIMER_APELLIDO,
                           e.SEGUNDO_APELLIDO,
                           e.CURP_EMPLEADO,
                           p.ID_PLAZA,
                           p.ID_UNIDAD_NOM,
                           u.DESC_UNIDAD
                    from td_empleado e, td_plaza p, tc_unidad u
                    where e.ID_PLAZA_VIGENTE = p.ID_PLAZA
                    and e.RFC_EMPLEADO = p.PLAZA_RFC
                    and p.ID_UNIDAD_NOM = u.ID_UNIDAD
                    and p.PLAZA_CICLO = u.UNI_CICLO
                    AND ##u.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                </prop>

                <prop key="EmpleadosDetalleHistorico">
                   select * from ( select e.RFC_EMPLEADO,
                          e.NOMBRE_EMPLEADO,
                          e.PRIMER_APELLIDO,
                          e.SEGUNDO_APELLIDO,
                          e.CURP_EMPLEADO,
                          p.ID_PLAZA,
                          p.ID_UNIDAD_NOM,
                          u.DESC_UNIDAD
                    from td_empleado e, tn_historico_pago p, tc_unidad u
                    where e.id_plaza_vigente = p.id_plaza
                      and e.rfc_empleado = p.hp_rfc
                      and p.id_unidad_nom = u.id_unidad
                      and p.hp_ejer_fiscal = u.uni_ciclo
                      and ##u.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                    group by e.RFC_EMPLEADO,
                             e.NOMBRE_EMPLEADO,
                             e.PRIMER_APELLIDO,
                             e.SEGUNDO_APELLIDO,
                             e.CURP_EMPLEADO,
                             p.ID_PLAZA,
                             p.ID_UNIDAD_NOM,
                             u.DESC_UNIDAD)
                </prop>

                <prop key= "empleadosDetalleHistorico">
                SELECT * FROM (  SELECT e.rfc_unico, TRIM (e.nombre_empleado) nombreEmpleado,
                             TRIM (e.primer_apellido) primerApellido,
                             TRIM (e.segundo_apellido) segundoApellido, COUNT (*) AS pagos
                        FROM td_empleado e, tn_historico_pago p
                       WHERE e.rfc_empleado = p.hp_rfc AND LENGTH (p.hp_rfc) = 13
                    GROUP BY e.rfc_unico,
                             e.nombre_empleado,
                             e.primer_apellido,
                             e.segundo_apellido)
                </prop>
                
                <!--Reportes - Constancia de nombramiento-->
                <prop key="empleadosConstanciaNombramiento">
                    SELECT * 
                    FROM (SELECT DISTINCT
                                 E.RFC_UNICO RFC_EMPLEADO,
                                 E.NOMBRE_EMPLEADO,
                                 E.PRIMER_APELLIDO,
                                 E.SEGUNDO_APELLIDO,
                                 E.CURP_EMPLEADO
                           FROM TN_MOVTOS_EMP_PLA CE, TD_EMPLEADO E, TC_MOVS_PERSONAL MP, TC_UNIDAD U
                          WHERE CE.MEP_RFC = E.RFC_EMPLEADO
                            AND CE.ID_UNIDAD_NOM = U.ID_UNIDAD(+)
                            AND U.UNI_CICLO(+) = SUBSTR(MEP_QNA_CAPTURA,1,4)
                            AND ##U.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                            AND CE.ID_MOVTO_PERSONA != 118 -- NO HAY NOMBRAMIENTO EN CARGA INICIAL
                            AND TRIM(CE.ID_MOVTO_PERSONA) = TRIM(MP.ID_MOVS_PERSONAL)
                            AND MP.MP_CONSTANCIA = 'S'
                            /*AND CE.ID_MOVTOS_EMP_PLA IN (SELECT MAX(M.ID_MOVTOS_EMP_PLA)
                                                         FROM TN_MOVTOS_EMP_PLA M, TC_MOVS_PERSONAL P
                                                         WHERE CE.MEP_RFC = M.MEP_RFC
                                                           AND TRIM(M.ID_MOVTO_PERSONA) = TRIM(P.ID_MOVS_PERSONAL)
                                                           AND P.MP_CONSTANCIA = 'S')*/ 
                            AND (CE.MEP_QNA_CANCELA IS NULL OR CE.MEP_QNA_CANCELA = 0)
                          GROUP BY E.RFC_UNICO,
                                 E.NOMBRE_EMPLEADO,
                                 E.PRIMER_APELLIDO,
                                 E.SEGUNDO_APELLIDO,
                                 E.CURP_EMPLEADO
                          ORDER BY RFC_EMPLEADO ASC)
                </prop>
                <prop key="listadoMovimientosConstanciaNombramiento">                    
                    SELECT 
                        CE.ID_MOVTOS_EMP_PLA idMovtoEmpPla,
                        CE.ID_MOVTO_PERSONA idMovto,
                        CE.MEP_QNA_CAPTURA qnaCaptura,
                        CE.ID_PLAZA idPlaza,
                        MP.DESC_MOVS_PERSONAL descMovto,
                        --TO_CHAR(CE.FEC_MODIFICO, 'dd MONTH yyyy') fechaCaptura,
                        CE.FEC_MODIFICO || ' ' || TO_CHAR(CE.FEC_MODIFICO, 'hh:mm:ss')  fechaCaptura,
                        CE.USUARIO usuario,
                        CE.ID_UNIDAD_NOM AS ID_UNIDAD
                    FROM 
                        TN_MOVTOS_EMP_PLA CE,
                        TD_EMPLEADO E LEFT OUTER JOIN TD_PLAZA P ON P.PLAZA_RFC = E.RFC_EMPLEADO,
                        TD_EMPLEADO E1,
                        TC_MOVS_PERSONAL MP
                    WHERE 
                        E.RFC_UNICO = E1.RFC_UNICO
                    AND E1.RFC_EMPLEADO = CE.MEP_RFC
                    AND TRIM(CE.ID_MOVTO_PERSONA) = TRIM(MP.ID_MOVS_PERSONAL)
                    AND MP.MP_CONSTANCIA = 'S' 
                    AND (CE.MEP_QNA_CANCELA IS NULL OR CE.MEP_QNA_CANCELA = 0)
                    AND ##E.RFC_EMPLEADO##
                    ORDER BY QNACAPTURA
                </prop>
                <prop key="empleadosAvisoCambio">
                    SELECT * 
                    FROM (SELECT DISTINCT
                                 E.RFC_UNICO RFC_EMPLEADO,
                                 E.NOMBRE_EMPLEADO,
                                 E.PRIMER_APELLIDO,
                                 E.SEGUNDO_APELLIDO,
                                 E.CURP_EMPLEADO
                           FROM TN_MOVTOS_EMP_PLA CE, TD_EMPLEADO E, TC_MOVS_PERSONAL MP, TC_UNIDAD U
                          WHERE CE.MEP_RFC = E.RFC_EMPLEADO
                            AND CE.ID_UNIDAD_NOM = U.ID_UNIDAD(+)
                            AND U.UNI_CICLO(+) = SUBSTR(MEP_QNA_CAPTURA,1,4)
                            AND ##U.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                            AND CE.ID_MOVTO_PERSONA IN (331,332,333,334,335,336,337,338,339,340,
                                                        341,342,343,344,345,346,347,349,351,352,
                                                        353,354,355,356,357,358,359,360,411,412,
                                                        413,414,416,417,418,419,420,421,422,424,
                                                        425,426,427)
                            AND TRIM(CE.ID_MOVTO_PERSONA) = TRIM(MP.ID_MOVS_PERSONAL)
                          /*AND CE.ID_MOVTOS_EMP_PLA IN (SELECT MAX(M.ID_MOVTOS_EMP_PLA)
                                                         FROM TN_MOVTOS_EMP_PLA M, TC_MOVS_PERSONAL P
                                                         WHERE CE.MEP_RFC = M.MEP_RFC
                                                           AND TRIM(M.ID_MOVTO_PERSONA) = TRIM(P.ID_MOVS_PERSONAL) )*/ 
                            AND (CE.MEP_QNA_CANCELA IS NULL OR CE.MEP_QNA_CANCELA = 0)
                          GROUP BY E.RFC_UNICO,
                                 E.NOMBRE_EMPLEADO,
                                 E.PRIMER_APELLIDO,
                                 E.SEGUNDO_APELLIDO,
                                 E.CURP_EMPLEADO
                          ORDER BY RFC_EMPLEADO ASC)
                </prop>
                <prop key="listadoMovimientosAviso">                    
                    SELECT 
                        CE.ID_MOVTOS_EMP_PLA idMovtoEmpPla,
                        CE.ID_MOVTO_PERSONA idMovto,
                        CE.MEP_QNA_CAPTURA qnaCaptura,
                        CE.ID_PLAZA idPlaza,
                        MP.DESC_MOVS_PERSONAL descMovto,
                        --TO_CHAR(CE.FEC_MODIFICO, 'dd MONTH yyyy') fechaCaptura,
                        CE.FEC_MODIFICO || ' ' || TO_CHAR(CE.FEC_MODIFICO, 'hh:mm:ss')  fechaCaptura,
                        CE.USUARIO usuario,
                        CE.ID_UNIDAD_NOM AS ID_UNIDAD
                    FROM 
                        TN_MOVTOS_EMP_PLA CE,
                        TD_EMPLEADO E LEFT OUTER JOIN TD_PLAZA P ON P.PLAZA_RFC = E.RFC_EMPLEADO,
                        TD_EMPLEADO E1,
                        TC_MOVS_PERSONAL MP
                    WHERE 
                        E.RFC_UNICO = E1.RFC_UNICO
                    AND E1.RFC_EMPLEADO = CE.MEP_RFC
                    AND TRIM(CE.ID_MOVTO_PERSONA) = TRIM(MP.ID_MOVS_PERSONAL)
                    AND MP.ID_MOVS_PERSONAL IN (331,332,333,334,335,336,337,338,339,340,341,
                                                342,343,344,345,346,347,349,351,352,353,354,
                                                355,356,357,358,359,360,411,412,413,414,416,
                                                417,418,419,420,421,422,424,425,426,427)
                    AND (CE.MEP_QNA_CANCELA IS NULL OR CE.MEP_QNA_CANCELA = 0)
                    AND ##E.RFC_EMPLEADO##
                    ORDER BY QNACAPTURA
                </prop>
                
                <prop key="HonorariosDetalle">                    
                    SELECT * FROM (
                        SELECT 
                            E.RFC_EMPLEADO,
                            E.NOMBRE_EMPLEADO,
                            E.PRIMER_APELLIDO,
                            E.SEGUNDO_APELLIDO,
                            E.CURP_EMPLEADO,
                            P.ID_PLAZA,
                            P.ID_UNIDAD_NOM,
                            U.DESC_UNIDAD, 
                            NULL AS CH_RFC_ENTREGA, 
                            NULL AS CH_DESC_CARGO, 
                            NULL AS CH_NOMBRE_RESP, 
                            NULL AS CH_CONOCIM, 
                            NULL AS CH_ESTUDIOS, 
                            NULL AS CH_SERVS_PROF, 
                            NULL AS CH_NUM_OFI, 
                            NULL AS CH_NUM_DICTAMEN, 
                            NULL AS CH_NUM_OFI_AUT
                        FROM 
                            TD_PLAZA P, 
                            TD_EMPLEADO E, 
                            TC_UNIDAD U, 
                            TC_REFERENCIA R
                        WHERE 
                            P.PLAZA_RFC = E.RFC_EMPLEADO AND
                            P.ID_UNIDAD_NOM = R.ID_UNIDAD_FISICA AND
                            R.REF_PROGRAMA = 'NOMBRAMIENTO' AND 
                            TO_CHAR(R.REF_FECHA_TRES, 'DD/MM/YYYY') = '01/01/2099' AND
                            P.ID_UNIDAD_NOM = U.ID_UNIDAD AND
                            U.UNI_CICLO = (SELECT SUBSTR(RC_QNA_CAPTURA,0,4) FROM TN_REG_CONTROL WHERE TN_REG_CONTROL.RC_VIGENTE = 'S')
                            AND ##U.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                    
                        UNION
                    
                        SELECT 
                            E.RFC_EMPLEADO,
                            E.NOMBRE_EMPLEADO,
                            E.PRIMER_APELLIDO,
                            E.SEGUNDO_APELLIDO,
                            E.CURP_EMPLEADO,
                            P.ID_PLAZA,
                            P.ID_UNIDAD_NOM,
                            U.DESC_UNIDAD,
                            H.CH_RFC_ENTREGA, 
                            H.CH_DESC_CARGO, 
                            H.CH_NOMBRE_RESP, 
                            H.CH_CONOCIM, 
                            H.CH_ESTUDIOS, 
                            H.CH_SERVS_PROF, 
                            H.CH_NUM_OFI, 
                            H.CH_NUM_DICTAMEN, 
                            H.CH_NUM_OFI_AUT 
                        FROM  
                            TD_PLAZA P, 
                            TD_EMPLEADO E, 
                            TC_UNIDAD U, 
                            TC_REFERENCIA R, 
                            TD_CONTRATO_HONO H
                        WHERE 
                            P.ID_PUESTO_NOM = 'HONORAR' AND
                            P.PLAZA_RFC = E.RFC_EMPLEADO AND
                            P.ID_UNIDAD_NOM = R.ID_UNIDAD_FISICA AND
                            R.REF_PROGRAMA = 'NOMBRAMIENTO' AND
                            TO_CHAR(R.REF_FECHA_TRES, 'DD/MM/YYYY') = '31/01/2013' AND
                            P.ID_UNIDAD_NOM = U.ID_UNIDAD AND
                            P.PLAZA_RFC = H.CH_RFC AND 
                            H.CH_STATUS = 'V' AND
                            U.UNI_CICLO = (SELECT SUBSTR(RC_QNA_CAPTURA,0,4) FROM TN_REG_CONTROL WHERE TN_REG_CONTROL.RC_VIGENTE = 'S') 
                            AND ##U.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                    )
                </prop>
                <prop key="PlazasDetalle">
                    select p.ID_PLAZA,
                       p.ID_UNIDAD_NOM,
                       u.DESC_UNIDAD
                    from td_plaza p, tc_unidad u
                    where p.ID_UNIDAD_NOM = u.ID_UNIDAD
                    and p.PLAZA_CICLO = u.UNI_CICLO
                    AND ##u.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="empleadosPlazaAtributoPuesto">
                    SELECT e.rfc_unico, e.rfc_empleado, e.primer_apellido, e.segundo_apellido,
                           e.nombre_empleado, e.curp_empleado, e.imss_issste, e.ingreso_gob_fed,
                           e.ingreso_dependencia, e.clabe_empleado, p.id_plaza, p.id_puesto_nom,
                           p.id_zona_dist_nom
                      FROM td_empleado e, td_plaza p, tc_atributo_puesto ap, tc_unidad u
                     WHERE e.id_plaza_vigente = p.id_plaza
                       AND e.rfc_empleado = p.plaza_rfc
                       AND ap.id_atributo_puesto = p.id_puesto_nom
                       AND ap.ap_fin = TO_DATE ('01/01/2099')
                       AND u.id_unidad = p.id_unidad_nom
                       AND ap.id_jerarquia = '7'
                       AND ##e.RFC_EMPLEADO## 
                       AND ##e.NOMBRE_EMPLEADO## 
                       AND ##e.PRIMER_APELLIDO## 
                       AND ##e.SEGUNDO_APELLIDO## 
                       AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tdEmpleadoMovtosPersonalPopUp">
                    SELECT t.rfc_empleado, t.id_tipo_pago, t.imss_issste, t.curp_empleado,
                           t.nombre_empleado, t.primer_apellido, t.segundo_apellido,
                           t.clabe_empleado,
                           TO_CHAR (t.ingreso_gob_fed, 'dd/mm/yyyy') AS ingreso_gob_fed,
                           TO_CHAR (t.ingreso_dependencia, 'dd/mm/yyyy') AS ingreso_dependencia,
                           t.calle_particular, t.colonia_particular, t.id_muni_particular as codigo_municipio,
                           t.id_edo_particular, t.codpost_particular, t.tel_particular
                      FROM td_empleado t
                     WHERE t.rfc_empleado NOT IN (
                                       SELECT t.rfc_empleado
                                         FROM td_empleado t, td_plaza p, tc_unidad u
                                        WHERE t.rfc_empleado = p.plaza_rfc
                                              AND u.id_unidad = p.id_unidad_nom
                                              AND p.id_sit_plaza LIKE 'O%'
                                              AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                                              AND ##id_unidad#SIREHUNIDAD#PRIMARY##
                                              )
                       AND LENGTH (t.rfc_empleado) = 13
                </prop>
                
                <!--Consulta General de Plazas - Gestion de Plazas-->
                <prop key="Plazas">
                    SELECT
                        P.ID_PLAZA, P.ID_PUESTO_NOM, P.ID_ZONA_DIST_NOM, P.ID_SIT_PLAZA,
                        E.RFC_UNICO, E.RFC_EMPLEADO, E.PRIMER_APELLIDO, E.SEGUNDO_APELLIDO,
                        E.NOMBRE_EMPLEADO, E.CURP_EMPLEADO, E.CLABE_EMPLEADO
                    FROM 
                        TD_PLAZA P, TD_EMPLEADO E
                    WHERE 
                        P.PLAZA_RFC = E.RFC_EMPLEADO
                </prop>
                
               
                <!--Autocomplete-->
                <prop key="tcSituacionAutoComplete">
                    select 
                        TRIM(ID_SIT_PLAZA), TRIM(DESC_SIT_PLAZA)
                    from 
                        TC_SIT_PLAZA 
                    where 
                        TRIM(ID_SIT_PLAZA) IN ('C','V') AND 
                        UPPER(TRIM(DESC_SIT_PLAZA)) LIKE ?
                </prop>
                <prop key="tcUnidadAutoComplete">
                    SELECT 
                        U.ID_UNIDAD, U.UNI_CICLO ||' - '|| U.ID_UNIDAD ||' - '|| U.DESC_UNIDAD
                    FROM 
                        TC_UNIDAD U
                    WHERE 
                        1=1  
                        AND ##U.UNI_CICLO##
                        AND ##U.ID_UNIDAD## 
                </prop>
                <prop key="tcPuestoAutoComplete">
                    select ID_PUESTO, ID_PUESTO ||' - '|| DESC_PUESTO
                    from tc_puesto 
                    where ID_PUESTO like ?
                </prop>
                
                
                <!--Consulta General de Movimientos de Personal -->
                <prop key="tcMovimientosPersonal">
                    SELECT
                        MP.ID_MOVS_PERSONAL, 
                        MP.DESC_MOVS_PERSONAL, 
                        MP.MP_CONSTANCIA,
                        MP.MP_TIPO_MOV_MENU
                    FROM 
                        TC_MOVS_PERSONAL MP
                    WHERE 
                        ##MP.ID_MOVS_PERSONAL## 
                        AND ##MP.DESC_MOVS_PERSONAL## 
                        AND ##MP.MP_CONSTANCIA## 
                        AND ##MP.MP_TIPO_MOV_MENU##
                </prop>
                <prop key="tcSituacionPlaza">
                    SELECT 
                        ID_SIT_PLAZA as id,
                        DESC_SIT_PLAZA as descripcion
                    FROM
                        TC_SIT_PLAZA
                </prop>
                <prop key="tcGrupoDePago">
                    SELECT 
                        ID_GRUPO_PAGO  AS ID_CONCEPTO,
                        DESC_GRUPO_PAGO AS DESCRIPCION
                    FROM 
                        TC_GRUPO_PAGO
                </prop>
                <prop key="tcJerarquia">
                    SELECT 
                        ID_JERARQUIA AS ID_CONCEPTO,  
                        DESC_JERARQUIA AS DESCRIPCION
                    FROM 
                        TC_JERARQUIA
                </prop>
                <prop key="tcNombramiento">
                    SELECT ID_NOMBRAMIENTO AS ID_CONCEPTO,  
                           DESC_NOMBRAMIENTO AS DESCRIPCION
                    FROM 
                        TC_NOMBRAMIENTO
                </prop>
                <prop key="plazaMovtosPersonal">
                    SELECT tc_sit_plaza.desc_sit_plaza, td_plaza.id_plaza, td_plaza.id_puesto_nom, td_plaza.id_rango_nom, td_plaza.id_unidad_nom, tc_atributo_puesto.ID_JERARQUIA, tc_atributo_puesto.ID_NOMBRAMIENTO,
                           tc_puesto.desc_puesto, tc_atributo_puesto.id_nivel_pto,
                           tc_grupo_pago.desc_grupo_pago, tc_jerarquia.desc_jerarquia,
                           tc_nombramiento.desc_nombramiento, td_empleado.rfc_empleado,
                           td_empleado.nombre_empleado, td_empleado.primer_apellido,
                           td_empleado.segundo_apellido
                      FROM td_plaza LEFT OUTER JOIN td_empleado
                           ON td_plaza.plaza_rfc = td_empleado.rfc_empleado,
                           tc_atributo_puesto,
                           tc_puesto,
                           tc_grupo_pago,
                           tc_sit_plaza,
                           tc_jerarquia,
                           tc_nombramiento,
                           tc_unidad
                     WHERE td_plaza.id_puesto_nom = tc_puesto.id_puesto
                       AND tc_unidad.id_unidad = td_plaza.id_unidad_nom
                       AND td_plaza.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto
                       AND tc_atributo_puesto.ap_fin = TO_DATE ('01/01/2099')
                       AND td_plaza.id_grupo_pago = tc_grupo_pago.id_grupo_pago
                       AND td_plaza.id_sit_plaza = tc_sit_plaza.id_sit_plaza
                       AND tc_atributo_puesto.id_jerarquia = tc_jerarquia.id_jerarquia
                       AND tc_atributo_puesto.id_nombramiento = tc_nombramiento.id_nombramiento
                       AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="plazaMovtosPersonalPopUp">
                    SELECT td_plaza.id_plaza, tc_puesto.desc_puesto, td_plaza.id_rango_nom,
                           td_plaza.id_unidad_nom, td_plaza.id_puesto_nom,
                           tc_atributo_puesto.id_jerarquia,
                           tc_atributo_puesto.id_nombramiento AS id_nombramiento,
                           tc_atributo_puesto.id_nivel_pto, td_plaza.id_zona_eco_nom,
                           tc_estado.id_edo, tc_estado.desc_estado, tc_municipio.id_municipio,
                           tc_municipio.desc_municipio, td_plaza.id_grupo_pago,
                           tc_grupo_pago.desc_grupo_pago, td_plaza.plaza_imp_hono,
                           td_plaza.id_zona_dist_nom, td_plaza.plaza_referencia,
                           TO_CHAR(td_plaza.plaza_ini_cont, 'DD/MM/YYYY') as plaza_ini_cont, TO_CHAR(td_plaza.plaza_fin_cont, 'DD/MM/YYYY') as plaza_fin_cont
                      FROM td_plaza,
                           tc_puesto,
                           tc_atributo_puesto,
                           tc_estado,
                           tc_municipio,
                           tc_grupo_pago,
                           tc_sit_plaza,
                           tc_unidad
                     WHERE td_plaza.id_puesto_nom = tc_puesto.id_puesto
                       AND td_plaza.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto
                       AND td_plaza.id_edo_nom = tc_estado.id_edo
                       AND td_plaza.id_edo_nom = tc_municipio.id_edo
                       AND td_plaza.id_muni_nom = tc_municipio.id_municipio
                       AND tc_atributo_puesto.ap_fin = TO_DATE ('01/01/2099')
                       AND td_plaza.id_grupo_pago = tc_grupo_pago.id_grupo_pago
                       AND td_plaza.id_sit_plaza = tc_sit_plaza.id_sit_plaza
                       AND tc_unidad.id_unidad = td_plaza.id_unidad_nom
                       AND td_plaza.id_sit_plaza = 'V'
                       AND td_plaza.id_grupo_pago <![CDATA[<>]]> 'H'
                       AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="Q2_conceptosEmpleado_Grid">
                    select  TN_MOVTO_CONCEPTO_PAGO.ID_SIT_CAPTURA,
                            TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO,
                            TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO,
                            TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO || '' || TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO as conceptoYtipoConcepto,
                            TC_CONCEPTO_PAGO.DESC_CON_PAG,
                            TN_MOVTO_CONCEPTO_PAGO.MCP_MONTO,
                            TN_MOVTO_CONCEPTO_PAGO.MCP_PORCENTAJE,
                            NVL (TN_MOVTO_CONCEPTO_PAGO.MCP_MONTO_ADEUDO, '0.00'),
                            TN_MOVTO_CONCEPTO_PAGO.USUARIO
                    from    TN_MOVTO_CONCEPTO_PAGO,TC_CONCEPTO_PAGO
                    where   TN_MOVTO_CONCEPTO_PAGO.ID_SIT_CAPTURA='V'
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO=TC_CONCEPTO_PAGO.ID_TIPO_CPTO
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO=TC_CONCEPTO_PAGO.ID_CONCEPTO
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO in('P','D')
                            and     ##TN_MOVTO_CONCEPTO_PAGO.MCP_RFC##
                </prop>
                <prop key="Q3_listaConceptosGenerales">
                    select  tc_concepto_pago_captura.ID_TIPO_CPTO || '|' || tc_concepto_pago.ID_CONCEPTO || '|' || tc_concepto_pago_captura.CPC_TIPO_CAPTURA || '|' ||  tc_concepto_pago_captura.CPC_TIPO_CALCULO || '|' || tc_concepto_pago_captura.CPC_PERMANENTE || '|' || tc_concepto_pago_captura.CPC_MENSAJE || '|' || tc_concepto_pago.DESC_CON_PAG as SelectedConceptoComboBox,
                    tc_concepto_pago_captura.ID_TIPO_CPTO || ' ' || tc_concepto_pago.ID_CONCEPTO || ' - ' || tc_concepto_pago.DESC_CON_PAG
                    from    tc_concepto_pago_captura, tc_concepto_pago
                    where   tc_concepto_pago_captura.ID_TIPO_CPTO = tc_concepto_pago.ID_TIPO_CPTO 
                            and    tc_concepto_pago_captura.ID_CPTO_PAGO = tc_concepto_pago.ID_CONCEPTO
                            and    tc_concepto_pago_captura.ID_TIPO_CPTO in ('P','D') 
                            and    tc_concepto_pago.ID_CONCEPTO BETWEEN 'T0' and 'TD' 
                            and    ##tc_concepto_pago_captura.CPC_SUBTIPO##
                            and    ##tc_concepto_pago_captura.CPC_NIVELES_PTO##
                            and    ##tc_concepto_pago_captura.CPC_NOMBRAMIENTO##
                            and    (tc_concepto_pago_captura.ID_TIPO_CPTO, tc_concepto_pago_captura.ID_CPTO_PAGO) 
                                   not in (select  tn_movto_concepto_pago.ID_TIPO_CPTO , tn_movto_concepto_pago.ID_CONCEPTO
                                            from    tn_movto_concepto_pago
                                            where   tn_movto_concepto_pago.ID_SIT_CAPTURA = 'V'
                                                    and ##tn_movto_concepto_pago.MCP_RFC##)   
                    union
                    select  tc_concepto_pago_captura.ID_TIPO_CPTO || '|' || tc_concepto_pago.ID_CONCEPTO || '|' || tc_concepto_pago_captura.CPC_TIPO_CAPTURA || '|' ||  tc_concepto_pago_captura.CPC_TIPO_CALCULO || '|' || tc_concepto_pago_captura.CPC_PERMANENTE || '|' || tc_concepto_pago_captura.CPC_MENSAJE || '|' || tc_concepto_pago.DESC_CON_PAG as SelectedConceptoComboBox,
                            tc_concepto_pago_captura.ID_TIPO_CPTO || ' ' || tc_concepto_pago.ID_CONCEPTO || ' - ' || tc_concepto_pago.DESC_CON_PAG
                    from    tc_concepto_pago_captura, tc_concepto_pago
                    where   tc_concepto_pago_captura.ID_TIPO_CPTO = tc_concepto_pago.ID_TIPO_CPTO 
                            and    tc_concepto_pago_captura.ID_CPTO_PAGO = tc_concepto_pago.ID_CONCEPTO
                            and    tc_concepto_pago_captura.ID_TIPO_CPTO in ('P','D')
                            and    tc_concepto_pago.ID_CONCEPTO BETWEEN 'P0' and 'PB' 
                            and    ##tc_concepto_pago_captura.CPC_SUBTIPO##
                            and    ##tc_concepto_pago_captura.CPC_NIVELES_PTO##
                            and    ##tc_concepto_pago_captura.CPC_NOMBRAMIENTO##
                            and    (tc_concepto_pago_captura.ID_TIPO_CPTO, tc_concepto_pago_captura.ID_CPTO_PAGO) 
                                   not in (select  tn_movto_concepto_pago.ID_TIPO_CPTO , tn_movto_concepto_pago.ID_CONCEPTO
                                            from    tn_movto_concepto_pago
                                            where   tn_movto_concepto_pago.ID_SIT_CAPTURA = 'V'
                                                    and ##tn_movto_concepto_pago.MCP_RFC##)
                    union                       
                    select  tc_concepto_pago_captura.ID_TIPO_CPTO || '|' || tc_concepto_pago.ID_CONCEPTO || '|' || tc_concepto_pago_captura.CPC_TIPO_CAPTURA || '|' ||  tc_concepto_pago_captura.CPC_TIPO_CALCULO || '|' || tc_concepto_pago_captura.CPC_PERMANENTE || '|' || tc_concepto_pago_captura.CPC_MENSAJE || '|' || tc_concepto_pago.DESC_CON_PAG as SelectedConceptoComboBox,
                            tc_concepto_pago_captura.ID_TIPO_CPTO || ' ' || tc_concepto_pago.ID_CONCEPTO || ' - ' || tc_concepto_pago.DESC_CON_PAG
                    from    tc_concepto_pago_captura, tc_concepto_pago
                    where   tc_concepto_pago_captura.ID_TIPO_CPTO = tc_concepto_pago.ID_TIPO_CPTO 
                            and    tc_concepto_pago_captura.ID_CPTO_PAGO = tc_concepto_pago.ID_CONCEPTO
                            and    tc_concepto_pago_captura.ID_TIPO_CPTO in ('P','D')
                            and    tc_concepto_pago.ID_CONCEPTO not in (select distinct ID_CONCEPTO from TC_CONCEPTO_PAGO where ID_CONCEPTO between 'P0' and 'PB')
                            and    tc_concepto_pago.ID_CONCEPTO not in (select distinct ID_CONCEPTO from TC_CONCEPTO_PAGO where ID_CONCEPTO between 'T0' and 'TD')
                            and    ##tc_concepto_pago_captura.CPC_SUBTIPO##
                            and    ##tc_concepto_pago_captura.CPC_NIVELES_PTO##
                            and    ##tc_concepto_pago_captura.CPC_NOMBRAMIENTO##
                            and    (tc_concepto_pago_captura.ID_TIPO_CPTO, tc_concepto_pago_captura.ID_CPTO_PAGO) 
                                   not in ( select  tn_movto_concepto_pago.ID_TIPO_CPTO , tn_movto_concepto_pago.ID_CONCEPTO
                                            from    tn_movto_concepto_pago
                                            where   tn_movto_concepto_pago.ID_SIT_CAPTURA = 'V'
                                                    and ##tn_movto_concepto_pago.MCP_RFC##)
                </prop>
                <prop key="allConceptosControl">
                    select  tc_concepto_pago_captura.ID_TIPO_CPTO || '|' || tc_concepto_pago.ID_CONCEPTO || '|' || tc_concepto_pago_captura.CPC_TIPO_CAPTURA || '|' ||  tc_concepto_pago_captura.CPC_TIPO_CALCULO || '|' || tc_concepto_pago_captura.CPC_PERMANENTE || '|' || tc_concepto_pago_captura.CPC_MENSAJE || '|' || tc_concepto_pago.DESC_CON_PAG as SelectedConceptoComboBox,
                            tc_concepto_pago_captura.ID_TIPO_CPTO || ' ' || tc_concepto_pago.ID_CONCEPTO || ' - ' || tc_concepto_pago.DESC_CON_PAG
                    from    tc_concepto_pago_captura,tc_concepto_pago
                    where   tc_concepto_pago_captura.ID_TIPO_CPTO=tc_concepto_pago.ID_TIPO_CPTO
                            and     tc_concepto_pago_captura.ID_CPTO_PAGO=tc_concepto_pago.ID_CONCEPTO
                            and     tc_concepto_pago_captura.CPC_SUBTIPO='G'-- si vienes de la primera opcion de menu
                            and     ##tc_concepto_pago_captura.CPC_NIVELES_PTO## --like '%K%'-- es el primer caracter del nivel del query 2
                            and     ##tc_concepto_pago_captura.CPC_NOMBRAMIENTO## --like '%C%'-- es el nombramiento del query 2
                            and     tc_concepto_pago_captura.ID_TIPO_CPTO = 'U'
                            and     (tc_concepto_pago_captura.ID_TIPO_CPTO , tc_concepto_pago_captura.ID_CPTO_PAGO) not in(
                                    select tn_movto_concepto_pago.ID_TIPO_CPTO , tn_movto_concepto_pago.ID_CONCEPTO
                                    from    tn_movto_concepto_pago
                                    where   tn_movto_concepto_pago.ID_SIT_CAPTURA='V'
                                            and     tn_movto_concepto_pago.ID_TIPO_CPTO = 'U'
                                            and     ##tn_movto_concepto_pago.MCP_RFC##)
                </prop>
                <prop key="conceptosControlAsignados">
                    select  TN_MOVTO_CONCEPTO_PAGO.ID_SIT_CAPTURA,
                            TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO,
                            TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO,
                            TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO || '' || TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO as conceptoYtipoConcepto,
                            TC_CONCEPTO_PAGO.DESC_CON_PAG,
                            TN_MOVTO_CONCEPTO_PAGO.MCP_MONTO,
                            TN_MOVTO_CONCEPTO_PAGO.MCP_PORCENTAJE,
                            NVL (TN_MOVTO_CONCEPTO_PAGO.MCP_MONTO_ADEUDO, '0.00'),
                            TN_MOVTO_CONCEPTO_PAGO.USUARIO
                    from    TN_MOVTO_CONCEPTO_PAGO,TC_CONCEPTO_PAGO
                    where   TN_MOVTO_CONCEPTO_PAGO.ID_SIT_CAPTURA='V'
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO=TC_CONCEPTO_PAGO.ID_TIPO_CPTO
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_CONCEPTO=TC_CONCEPTO_PAGO.ID_CONCEPTO
                            and     TN_MOVTO_CONCEPTO_PAGO.ID_TIPO_CPTO in ('U')
                            and     ##TN_MOVTO_CONCEPTO_PAGO.MCP_RFC##
                </prop>
                <prop key="tcQuincenaValidacion">
                  select tn_historico_pago.HP_QNA_PAGO as CLAVE,
                         tn_historico_pago.HP_QNA_PAGO as DESCRIPCION
                    from 
                       tn_historico_pago
                    where substr(tn_historico_pago.HP_QNA_PAGO,1,4) = ?  
                    group by tn_historico_pago.HP_QNA_PAGO
                    order by tn_historico_pago.HP_QNA_PAGO
                </prop>
                 <prop key="tcMaxRemesaPuntualidadPorCiclo">
		                    select nvl(max(td_nmh_op_max) + 1,1)  as CLAVE, nvl(max(td_nmh_op_max) + 1,1) as DESCRIPCION  from (
		                        select to_number(substr(nmh_op,5))  as td_nmh_op_max
		                        from td_nm_historico 
		                        group by nmh_op, nmh_ciclo, nmh_causal
		                        having substr(nmh_op,1,3) = 'REM' and  nmh_ciclo=? and nmh_causal=3
		                        order by to_number(substr(nmh_op,5)))
                </prop>
                <prop key="tcMaxRemesaCapacitacionPorCiclo">
		                    select nvl(max(td_nmh_op_max) + 1,1)  as CLAVE, nvl(max(td_nmh_op_max) + 1,1) as DESCRIPCION  from (
		                        select to_number(substr(nmh_op,5))  as td_nmh_op_max
		                        from td_nm_historico 
		                        group by nmh_op, nmh_ciclo, nmh_causal
		                        having substr(nmh_op,1,3) = 'REM' and  nmh_ciclo=? and nmh_causal=4
		                        order by to_number(substr(nmh_op,5)))
                </prop>
                 <prop key="tcMaxRemesaEmpenoPorCiclo">
		                    select nvl(max(td_nmh_op_max) + 1,1)  as CLAVE, nvl(max(td_nmh_op_max) + 1,1) as DESCRIPCION  from (
		                        select to_number(substr(nmh_op,5))  as td_nmh_op_max
		                        from td_nm_historico 
		                        group by nmh_op, nmh_ciclo, nmh_causal
		                        having substr(nmh_op,1,3) = 'REM' and  nmh_ciclo=? and nmh_causal=1
		                        order by to_number(substr(nmh_op,5)))
                </prop>
                
                 <prop key="catalogoTerceros">
                    SELECT id_tercero, id_tercero  || ' - ' ||   tc_tercero.desc_tercero
                    FROM tc_tercero 
                </prop>
                 <prop key="tcUnidad">
                    SELECT id_unidad AS clave, id_unidad || ' - ' || DESC_UNIDAD AS descripcion
                      FROM tc_unidad
                     WHERE uni_ciclo = ?
                     and ##id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tcUnidadByCiclo">
                    SELECT  id_unidad AS clave, id_unidad || ' - ' || DESC_UNIDAD AS descripcion
                    FROM    tc_unidad
                    WHERE   ##uni_ciclo##
                </prop>
                 <prop key="tcDimensionUnidad">
                    SELECT id_unidad AS clave, id_unidad || ' - ' || DESC_UNIDAD AS descripcion
                    FROM tc_unidad
                    where uni_ciclo= ? 
                    and ##id_unidad#SIREHUNIDAD#PRIMARY##
                    
                    order by clave
                </prop>
                 <prop key="tcUnidadSinCiclo">
                    SELECT id_unidad AS clave, id_unidad || ' - ' || DESC_UNIDAD AS descripcion
                      FROM tc_unidad
                     WHERE ##uni_ciclo#=#OPERATIONAL_YEAR##
                     and ##id_unidad#SIREHUNIDAD#PRIMARY##
                     ORDER BY clave ASC

                </prop>
                 <prop key="tcRemesaEmpenoPorCicloYCausal">
		                    select to_number(substr(nmh_op,5)) as CLAVE, 
                                 to_number(substr(nmh_op,5)) as DESCRIPCION  
		                        from td_nm_historico 
		                        group by nmh_op, nmh_ciclo, nmh_causal
		                        having substr(nmh_op,1,3) = 'REM' and  nmh_ciclo = ? and nmh_causal = ?
		                        order by to_number(substr(nmh_op,5))
                </prop>
                <prop key="tcHistoricoNotasMerito">
                    Select h.NMH_RFC_UNICO, h.ID_UNIDAD, h.NMH_NUM_DOCTO, c.DESC_NM_CAUSAL, h.NMH_CICLO, h.NMH_OP, h.NMH_FECHA_REG,
                    h.NMH_TIPO_PLAZA, h.ID_GENERO,h.NMH_QNA_PAGO_VALIDAR,h.NMH_FECHA_AGRE, h.USUARIO,h.FEC_MODIFICO
                    From td_Nm_historico h, tc_nm_causal c
                    where h.NMH_CAUSAL = c.ID_NM_CAUSAL 
                    AND ##h.NMH_RFC##
                    AND ##h.NMH_CICLO## 
                    AND ##h.NMH_CAUSAL## 
                    AND ##TRIM(h.NMH_OP)## 
                </prop>
                 <prop key="tcRemesaEmpenoPorCicloYCausalCompleto">
                    select TRIM(nmh_op) as CLAVE, 
                           TRIM(nmh_op) as DESCRIPCION  
                        from td_nm_historico 
                        group by nmh_op, nmh_ciclo, nmh_causal
                        having substr(nmh_op,1,3) = 'REM' and  nmh_causal = ?  and nmh_ciclo = ?
                        order by to_number(substr(nmh_op,5))
                </prop>
                <prop key="tcCausalMerito">
                    select id_nm_causal as CLAVE, desc_nm_causal as DESCRIPCION from tc_nm_causal where id_nm_causal in(1,3,4)
                </prop>
                <prop key="tcCausalMeritoSinEval">
                    select id_nm_causal as CLAVE, desc_nm_causal as DESCRIPCION from tc_nm_causal where id_nm_causal in(3,4)
                </prop>
                <prop key="empleadoPlazaEmpleadoAtributoPuesto">
                    SELECT e.rfc_empleado, e.nombre_empleado, e.primer_apellido,
                           e.segundo_apellido, p.id_plaza, p.id_puesto_nom, ap.id_nivel_pto
                      FROM td_plaza p, td_empleado e, tc_atributo_puesto ap
                     WHERE p.plaza_rfc = e.rfc_empleado
                       AND p.id_puesto_nom = ap.id_atributo_puesto
                       AND ap.ap_fin = TO_DATE ('01/01/2099')
                </prop>
                <prop key="tcResumenNotasMerito">
                    Select n.NMR_RFC, n.NMR_CICLO_PAGO, c.DESC_NM_CAUSAL, n.NMR_CICLO_INICIAL, n.NMR_CICLO_FINAL, n.NMR_DIAS_PAGADOS,
                    n.NMR_OP,n.NMR_REMESA_INTERNA, n.NMR_OFIC_ENVIO, n.NMR_FEC_ENVIO, n.NMR_IMPTE_BRUTO, n.NMR_IMPTE_NETO,
                    n.NMR_IMPTE_PENSION, n.NMR_IMPTE_ISR   
                    From td_nm_resumen n, tc_nm_causal c
                    where n.NMR_CAUSAL = c.ID_NM_CAUSAL 
                    AND ##n.NMR_RFC##
                    AND ##n.NMR_CICLO_PAGO## 
                    AND ##n.NMR_CAUSAL## 
                    AND ##TRIM(n.NMR_OP)## 
                    AND ##TRIM(n.NMR_REMESA_INTERNA)## 
                </prop>
                <prop key="tcRemesaInternaMerito">
                    select TRIM(nmr_remesa_interna) as CLAVE, TRIM(nmr_remesa_interna) as DESCRIPCION   from td_nm_resumen 
                            where nmr_ciclo_pago = ? 
                            group by nmr_remesa_interna
                            order by td_nm_resumen.nmr_remesa_interna
                </prop>
                <prop key="complementoTnHistoricoPago">
                    SELECT   hp.hp_num_complem AS ID, hp.hp_num_complem AS descripcion
                        FROM tn_historico_pago hp, td_empleado e, tn_nomina n
                       WHERE hp.hp_consec_nomina = n.id_nomina
                         AND hp_qna_pago = ?
                         AND hp.hp_num_pension = 0
                         AND hp.hp_rfc = e.rfc_empleado
                         AND hp.hp_deposito_s_n = 1
                    GROUP BY hp.hp_num_complem, hp.hp_num_complem
                    ORDER BY TO_NUMBER (hp.hp_num_complem)
                </prop>
                <prop key="idTipoNominaTnHistoricoPago">
                    SELECT   hp.id_tipo_nomina AS ID, tn.desc_tipo_nomina
                        FROM tn_historico_pago hp, td_empleado e, tn_nomina n, tc_tipo_nomina tn
                       WHERE hp.hp_consec_nomina = n.id_nomina
                         AND tn.id_tipo_nomina = hp.id_tipo_nomina
                         AND hp.hp_qna_pago = ?
                         AND hp.hp_num_complem = ?
                         AND hp.hp_num_pension = 0
                         AND hp.hp_rfc = e.rfc_empleado
                         AND hp.hp_deposito_s_n = 1
                    GROUP BY hp.id_tipo_nomina, tn.desc_tipo_nomina
                </prop>
                <prop key="hpQnaPagoHistoricoPago">
            		SELECT DISTINCT hp.hp_qna_pago AS ID, hp.hp_qna_pago AS descripcion
                       FROM tn_historico_pago hp
                     WHERE ##hp.hp_qna_pago##
                     ORDER BY hp.hp_qna_pago DESC
                </prop>
                
                 <prop key="catalogoQnaPagoHistoricoPago">
                        SELECT DISTINCT hp.hp_qna_pago AS ID, hp.hp_qna_pago AS descripcion
                        FROM tn_historico_pago hp
                        WHERE to_number(SUBSTR(hp.hp_qna_pago,0,4)) >2012
                        ORDER BY hp.hp_qna_pago DESC
                </prop>
                
                <prop key="catalogoNumQnaReportes">
                    SELECT DISTINCT hp.hp_qna_pago AS ID, SUBSTR(hp.hp_qna_pago,5,2) AS descripcion
                    FROM tn_historico_pago hp
                    WHERE SUBSTR(hp.hp_qna_pago,0,4)  = ?
                    ORDER BY 1 
                </prop>
                <prop key="catalogoNumQnaReportesCLC">
                    select td_cxlc.CXLC_QNA_PAGO, td_cxlc.CXLC_QNA_PAGO as qnaPago
                    from td_cxlc
                    where td_cxlc.CXLC_ciclo = ?
                    group by td_cxlc.CXLC_QNA_PAGO
                    order  by td_cxlc.CXLC_QNA_PAGO DESC              
                </prop>                
                 <prop key="tcTipoNominaReportes">
                    SELECT ID_TIPO_NOMINA, ID_TIPO_NOMINA  || '- ' ||  DESC_TIPO_NOMINA 
                    FROM TC_TIPO_NOMINA
                    ORDER BY  DESC_TIPO_NOMINA 
                </prop>
                 <prop key="tcTipoNominaReportesCLC">
                    select td_cxlc.ID_TIPO_NOMINA, td_cxlc.ID_TIPO_NOMINA || '- ' || tipoNomina.DESC_TIPO_NOMINA 
                    from td_cxlc, TC_TIPO_NOMINA tipoNomina
                    where td_cxlc.CXLC_QNA_PAGO = ?
                    and td_cxlc.CXLC_ciclo = ?
                    and td_cxlc.ID_TIPO_NOMINA = tipoNomina.ID_TIPO_NOMINA
                    group by td_cxlc.ID_TIPO_NOMINA, tipoNomina.DESC_TIPO_NOMINA 
                    order  by td_cxlc.ID_TIPO_NOMINA
                </prop>
                 <prop key="tcTipoNominaReportesISSSTE">
                    select td_cxlc.ID_TIPO_NOMINA, td_cxlc.ID_TIPO_NOMINA || '- ' || tipoNomina.DESC_TIPO_NOMINA 
                    from td_cxlc, TC_TIPO_NOMINA tipoNomina
                    where td_cxlc.CXLC_QNA_PAGO = ?
                    and td_cxlc.CXLC_ciclo = ?
                    and td_cxlc.ID_TIPO_NOMINA = 'IS'
                    and td_cxlc.ID_TIPO_NOMINA = tipoNomina.ID_TIPO_NOMINA
                    group by td_cxlc.ID_TIPO_NOMINA, tipoNomina.DESC_TIPO_NOMINA 
                    order  by td_cxlc.ID_TIPO_NOMINA
                </prop>
                 <prop key="tdNMHistoricoFechaReport">
                   select to_char(fecha,'DD/MM/YYYY') , descripcion
                   from  (select unique NMH_FECHA_REG as fecha ,to_CHAR(NMH_FECHA_REG,'DD/MM/YYYY') as descripcion
                    from TD_NM_HISTORICO
                    where to_char(NMH_FECHA_REG,'YYYY') = ?
                    order by NMH_FECHA_REG)
                </prop>
                <prop key="tdNMResumenRemesa">                
                    SELECT UNIQUE H.NMH_OP,TO_CHAR(H.NMH_OP)
                    FROM TD_NM_HISTORICO H 
                    WHERE H.NMH_CICLO = ?
                    ORDER BY H.NMH_OP
                </prop>
                 <prop key="tdNMResumenRemesaInterna">
                select   unique NMR_REMESA_INTERNA,to_CHAR(NMR_REMESA_INTERNA)
                from TD_NM_RESUMEN 
                where nmr_ciclo_pago = ?
                order by NMR_REMESA_INTERNA
                </prop>
                <prop key="tdNMHistoricoCveCausal">
                select unique  NMH_CAUSAL ,to_CHAR(NMH_CAUSAL)
                from TD_NM_HISTORICO
                order by NMH_CAUSAL 
                </prop>
                <prop key="tnRegControl">
                select UNIQUE SUBSTR(rc_qna_captura,5,6),to_char(rc_qna_captura)
                        from tn_reg_control
                        where SUBSTR(rc_qna_captura,0,4)=?
                        order by rc_qna_captura DESC
                </prop>
                <prop key="tcTipoConcepto">
                    select id_tipo_concepto,id_tipo_concepto || '- ' || desc_tipo_concepto
                    from tc_tipo_concepto           
                </prop>
                <prop key="catalogoTercerosManto">
                    SELECT  tc_tercero.desc_tercero as key, tc_tercero.desc_tercero as value
                    FROM tc_tercero 
                </prop>
                 <prop key="catalogoCausalMerito">
		                     select id_nm_causal as CLAVE,id_nm_causal ||  ' - ' || desc_nm_causal as DESCRIPCION from tc_nm_causal 
                </prop>
                
                <prop key="catalogoClavesCLCParametros">
                        select cxlc_parametros as ID, cxlc_parametros as descripcion
		         from td_cxlc
                        WHERE cxlc= ?
                        and cxlc_ciclo = ?
                </prop>
                <prop key="catalogoClavesCLC">
                        select cxlc as ID , cxlc as descripcion
		         from td_cxlc
                        WHERE cxlc_complemento= ?
                        and cxlc_QNA_PAGO = ?
                        and ID_TIPO_NOMINA= ?
                </prop>
                
                <prop key="catalogoComplementoCLC">
                    SELECT cxlc_complemento as ID , cxlc_complemento as descripcion
                    FROM td_cxlc
                    WHERE 
                        CXLC_QNA_PAGO = ?
                    AND CXLC_CICLO= ?
                    AND ID_TIPO_NOMINA= ?
                </prop>
                <prop key="catalogoSitCaptura">
                        select ID_SIT_CAPTURA as ID , DESC_SIT_CAPTURA as descripcion
		         from TC_SIT_CAPTURA
                </prop>
                
                <prop key="catalogoQnaPagoEnteros">
            		SELECT DISTINCT hp.hp_qna_pago AS ID, hp.hp_qna_pago AS descripcion
                       FROM tn_historico_pago hp
                     ORDER BY hp.hp_qna_pago DESC
                </prop>
                
                 <prop key="tiposNominaEnteros">
                    SELECT ID_TIPO_NOMINA, ID_TIPO_NOMINA  || '- ' ||  DESC_TIPO_NOMINA 
                    FROM TC_TIPO_NOMINA
                    WHERE ID_TIPO_NOMINA IN('OR','EX')
                    ORDER BY  DESC_TIPO_NOMINA 
                </prop>
                <prop key="ComplHisPagoEnteros">
                    SELECT DISTINCT hp.hp_num_complem, id_tipo_nomina
                               FROM tn_historico_pago hp
                              WHERE  id_tipo_nomina = ?
                              and    HP.HP_QNA_PAGO = ?
                           ORDER BY TO_NUMBER (hp.hp_num_complem)
                </prop>
                <prop key="listadoMovimientosRFC">                    
                    SELECT 
                        CE.ID_MOVTOS_EMP_PLA idMovtoEmpPla,
                        CE.MEP_QNA_CAPTURA qnaCaptura,
                        P.ID_PLAZA idPlaza,
                        CE.ID_MOVTO_PERSONA idMovto,
                        MP.DESC_MOVS_PERSONAL descMovto,
                        TO_CHAR(CE.FEC_MODIFICO, 'dd MONTH yyyy') fechaCaptura,
                        CE.USUARIO usuario
                    FROM 
                        TN_MOVTOS_EMP_PLA CE,
                        TD_EMPLEADO E LEFT OUTER JOIN TD_PLAZA P ON P.PLAZA_RFC = E.RFC_EMPLEADO,
                        TC_MOVS_PERSONAL MP
                    WHERE 
                        E.RFC_EMPLEADO = CE.MEP_RFC
                    AND TRIM(CE.ID_MOVTO_PERSONA) = TRIM(MP.ID_MOVS_PERSONAL)
                    AND MP.MP_CONSTANCIA = 'S'
                    AND (CE.MEP_QNA_CANCELA IS NULL OR CE.MEP_QNA_CANCELA = 0)
                    AND ##E.RFC_EMPLEADO##
                    ORDER BY QNACAPTURA
                </prop>
                <prop key="tcAnioConsultaMerito">
		     select nmh_ciclo as clave, nmh_ciclo as descripcion  from td_nm_historico group by nmh_ciclo order by nmh_ciclo desc
                </prop>
                <prop key="tcFechaTerminoVigenciaBajasPlazasEventuales">
		     select TO_CHAR(plaza_fin_cont,'dd/mm/yyyy') as clave, 
                            TO_CHAR(plaza_fin_cont,'dd/mm/yyyy') as descripcion  
                            from  td_plaza 
                     where 
                     id_grupo_pago ='V' 
                     and 
                     id_sit_plaza like 'O%'  
                     group by plaza_fin_cont order by plaza_fin_cont
                </prop>
                <prop key="tcFechaTerminoVigenciaBajasPlazasHonorarios">
		     select TO_CHAR(plaza_fin_cont,'dd/mm/yyyy') as clave, 
                            TO_CHAR(plaza_fin_cont,'dd/mm/yyyy') as descripcion  
                            from  td_plaza 
                     where 
                     id_grupo_pago ='H' 
                     and 
                     id_sit_plaza like 'O%'  
                     group by plaza_fin_cont order by plaza_fin_cont
                </prop>
                <!-- INICIO FILTROS DE PLAZAS EVENTUALES -->
                 <prop key="tcBajasPlazasEventuales">
                    SELECT p.id_plaza, p.id_puesto_nom, p.id_zona_eco_nom, p.id_unidad_nom,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.id_sit_plaza, a.id_nombramiento,
                           a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p INNER JOIN tc_atributo_puesto a
                           ON p.id_puesto_nom = id_atributo_puesto
                     WHERE p.id_grupo_pago = 'V'
                       AND p.id_sit_plaza LIKE 'O%'
                       AND a.ap_fin = TO_DATE ('01/01/2099')
                       AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tcBajasEventualesFechaFinCont">
                    SELECT DISTINCT TO_CHAR(p.plaza_fin_cont, 'dd/MM/yyyy') as id, TO_CHAR(p.plaza_fin_cont, 'dd/MM/yyyy') as descripcion
                               FROM td_plaza p
                              WHERE p.id_grupo_pago = 'V'
                              and p.id_sit_plaza like 'O%'
                              AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tcBajasHonorariosFechaFinCont">
                    SELECT DISTINCT TO_CHAR(p.plaza_fin_cont, 'dd/MM/yyyy') as id, TO_CHAR(p.plaza_fin_cont, 'dd/MM/yyyy') as descripcion
                               FROM td_plaza p
                              WHERE p.id_grupo_pago = 'H'
                              and p.id_sit_plaza like 'O%'
                              AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##
                </prop>
                 <prop key="tcBajasPlazasHonorarios">
                    SELECT p.id_plaza, p.id_puesto_nom, p.id_zona_eco_nom, p.id_unidad_nom,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.id_sit_plaza, a.id_nombramiento,
                           a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p INNER JOIN tc_atributo_puesto a
                           ON p.id_puesto_nom = id_atributo_puesto
                     WHERE p.id_grupo_pago = 'H'
                       AND p.id_sit_plaza LIKE 'O%'
                       AND a.ap_fin = TO_DATE ('01/01/2099')
                         AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tcBajasPlazasEventualesUnidad">
                SELECT DISTINCT p.id_unidad_pre AS clave,
                                p.id_unidad_pre || ' - ' || u.desc_unidad AS descripcion
                           FROM td_plaza p, tc_unidad u
                          WHERE p.id_unidad_pre = u.id_unidad
                            AND p.id_grupo_pago = 'V'
                            AND p.id_sit_plaza LIKE 'O%'
                            AND TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') = ?
                            AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                            AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                       ORDER BY p.id_unidad_pre
                </prop>
                 <prop key="tcBajasPlazasHonorariosUnidad">
                SELECT DISTINCT p.id_unidad_pre AS clave,
                                p.id_unidad_pre || ' - ' || u.desc_unidad AS descripcion
                           FROM td_plaza p, tc_unidad u
                          WHERE p.id_unidad_pre = u.id_unidad
                            AND p.id_grupo_pago = 'H'
                            AND p.id_sit_plaza LIKE 'O%'
                            AND TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') = ?
                            AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                            AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##
                       ORDER BY p.id_unidad_pre
                </prop>
                <!-- INICIA FILTROS MASIVOS EVENTUALES  -->
                <prop key="tnMovtosEmpPlaCreacionEventuales">
                    SELECT m.id_plaza, m.mep_rfc, m.id_puesto_nom, m.id_zona_eco_nom, m.id_unidad_nom,
                           m.id_nombramiento_nom, m.id_jerarquia_nom, m.id_nivel_pto_nom,
                           m.id_situacion_plaza, m.mep_ini_cont, m.mep_fin_cont
                      FROM tn_movtos_emp_pla m, tc_unidad u 
                     WHERE u.id_unidad = m.id_unidad_nom
                       AND m.id_movto_persona = 336
                       AND m.id_grupo_pago = 'V'
                       AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                       AND m.mep_qna_cancela is null
                       AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                       AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaUsuario">
                    SELECT DISTINCT m.usuario AS clave, m.usuario AS descripcion
                               FROM tn_movtos_emp_pla m, tc_unidad u 
                              WHERE u.id_unidad = m.id_unidad_nom
                                AND m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'V'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                                AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaQnaCaptura">
                    SELECT DISTINCT m.mep_qna_captura AS clave, m.mep_qna_captura AS descripcion
                               FROM tn_movtos_emp_pla m, tc_unidad u 
                              WHERE u.id_unidad = m.id_unidad_nom
                                AND m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'V'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                                AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                                FROM td_plaza p, td_empleado e
                                               WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaMepIniCont">
                    SELECT DISTINCT TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') AS id,
                                    TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') AS descripcion
                               FROM tn_movtos_emp_pla m, tc_unidad u 
                              WHERE u.id_unidad = m.id_unidad_nom
                                AND m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'V'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND m.mep_qna_captura = ?
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##U.uni_ciclo#=#OPERATIONAL_YEAR##
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaUnidades">
                    SELECT DISTINCT u.id_unidad AS clave,
                                    u.id_unidad || ' - ' || u.desc_unidad AS descripcion
                               FROM tn_movtos_emp_pla m, tc_unidad u
                              WHERE m.id_unidad_nom = u.id_unidad
                                AND m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'V'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') = ?
                                AND m.MEP_QNA_CAPTURA = ?
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                           ORDER BY u.id_unidad ASC
                </prop>
                <!-- FIN FILTROS MASIVOS EVENTUALES  -->
                <!-- INICIA FILTROS MASIVOS HONORARIOS  -->
                <prop key="tnMovtosEmpPlaAltaHonorar">
                    SELECT m.id_plaza, m.mep_rfc, m.id_puesto_nom, m.id_zona_eco_nom, m.id_unidad_nom,
                           m.id_nombramiento_nom, m.id_jerarquia_nom, m.id_nivel_pto_nom,
                           m.id_situacion_plaza, m.mep_ini_cont, m.mep_fin_cont
                      FROM tn_movtos_emp_pla m
                     WHERE m.id_movto_persona = 336
                       AND m.id_grupo_pago = 'H'
                       AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                       AND m.mep_qna_cancela is null
                       AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                       AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaUsuarioHonorar">
                    SELECT DISTINCT m.usuario AS clave, m.usuario AS descripcion
                               FROM tn_movtos_emp_pla m
                              WHERE m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'H'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaQnaCapturaHonorar">
                    SELECT DISTINCT m.mep_qna_captura AS clave, m.mep_qna_captura AS descripcion
                               FROM tn_movtos_emp_pla m
                              WHERE m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'H'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaMepIniContHonorar">
                    SELECT DISTINCT TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') AS id,
                                    TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') AS descripcion
                               FROM tn_movtos_emp_pla m
                              WHERE m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'H'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND m.mep_qna_captura = ?
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                </prop>
                <prop key="tnMovtosEmpPlaUnidadesHonorar">
                    SELECT DISTINCT m.id_unidad_nom AS clave, m.id_unidad_nom AS descripcion
                               FROM tn_movtos_emp_pla m
                              WHERE m.id_movto_persona = 336
                                AND TO_NUMBER(TO_CHAR( m.mep_fin_cont, 'yyyy')) >= (select floor(c.RC_QNA_CAPTURA / 100) from TN_REG_CONTROL c where c.RC_VIGENTE = 'S') - 1
                                AND m.id_grupo_pago = 'H'
                                AND m.mep_observa = 'MOVIMIENTO DE BAJA MASIVA'
                                AND m.mep_qna_cancela is null
                                AND TO_CHAR (m.mep_ini_cont, 'dd/MM/yyyy') = ?
                                AND m.MEP_QNA_CAPTURA = ?
                                AND UPPER(m.usuario) = UPPER(?)
                                AND ##m.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                                AND m.mep_rfc NOT IN (SELECT p.plaza_rfc
                                               FROM td_plaza p, td_empleado e
                                              WHERE p.plaza_rfc = e.rfc_empleado)
                           ORDER BY m.id_unidad_nom ASC
                </prop>
                <!-- FIN FILTROS MASIVOS EVENTUALES  -->
                <!-- INICIA MASIVOS EVENTUALES PRORROGA -->
                <prop key="tdPlazaProrrogaEventuales">
                    SELECT p.id_plaza, p.id_sit_plaza, p.plaza_rfc, p.plaza_ciclo,
                           p.plaza_respaldo, p.id_grupo_pago, p.id_unidad_pre, p.id_puesto_pre,
                           p.id_edo_pre, p.id_zona_eco_pre, p.id_rango_pre, p.id_proy_reduce_pre,
                           p.id_proy_amplia_pre, p.id_unidad_nom, p.id_puesto_nom, p.id_edo_nom,
                           p.id_muni_nom, p.id_zona_eco_nom, p.id_rango_nom, p.id_zona_dist_nom,
                           p.plaza_imp_hono, p.id_movto_persona, p.plaza_ultimo_movto,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.plaza_ini_lic, p.plaza_fin_lic,
                           p.plaza_referencia, p.plaza_qna_captura, p.id_tipo_plaza,
                           p.id_serv_pub, p.id_pto_estrategico, p.id_nodo, p.id_inmueble,
                           p.plaza_edif, p.plaza_piso, p.plaza_ala, p.plaza_ofna, p.plaza_tel_of1,
                           p.plaza_tel_of2, p.plaza_conmut, p.plaza_ext1, p.plaza_ext2, p.usuario,
                           p.fec_modifico, a.id_nombramiento, a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p, td_empleado e, tc_atributo_puesto a
                     WHERE p.plaza_rfc = e.rfc_empleado
                       AND p.ID_PUESTO_NOM = a.id_atributo_puesto
                       AND p.id_grupo_pago = 'V'
                       AND p.id_sit_plaza LIKE 'O%'
                       AND a.ap_fin = '01/01/2099'
                       AND ##p.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tdPlazaFinContEventualProrroga">
                    SELECT DISTINCT TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') AS ID,
                                    TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') AS descripcion
                               FROM td_plaza p, td_empleado e
                              WHERE p.plaza_rfc = e.rfc_empleado
                                AND p.id_grupo_pago = 'V'
                                AND p.id_sit_plaza LIKE 'O%'
                                AND ##p.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tdPlazaUnidadesEventualesProrroga">
                    SELECT DISTINCT u.id_unidad AS clave, u.id_unidad || ' - ' || u.DESC_UNIDAD AS descripcion
                               FROM td_plaza p, td_empleado e, tc_unidad u
                              WHERE p.plaza_rfc = e.rfc_empleado
                                AND p.id_unidad_pre = u.id_unidad
                                AND p.id_grupo_pago = 'V'
                                AND p.id_sit_plaza LIKE 'O%'
                                AND TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') = ?
                                AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                                AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                                order by u.id_unidad
                </prop>
                <!-- FIN MASIVOS EVENTUALES PRORROGA -->
                <!-- INICIA MASIVOS HONORARIOS PRORROGA -->
                <prop key="tdPlazaProrrogaHonorarios">
                    SELECT p.id_plaza, p.id_sit_plaza, p.plaza_rfc, p.plaza_ciclo,
                           p.plaza_respaldo, p.id_grupo_pago, p.id_unidad_pre, p.id_puesto_pre,
                           p.id_edo_pre, p.id_zona_eco_pre, p.id_rango_pre, p.id_proy_reduce_pre,
                           p.id_proy_amplia_pre, p.id_unidad_nom, p.id_puesto_nom, p.id_edo_nom,
                           p.id_muni_nom, p.id_zona_eco_nom, p.id_rango_nom, p.id_zona_dist_nom,
                           p.plaza_imp_hono, p.id_movto_persona, p.plaza_ultimo_movto,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.plaza_ini_lic, p.plaza_fin_lic,
                           p.plaza_referencia, p.plaza_qna_captura, p.id_tipo_plaza,
                           p.id_serv_pub, p.id_pto_estrategico, p.id_nodo, p.id_inmueble,
                           p.plaza_edif, p.plaza_piso, p.plaza_ala, p.plaza_ofna, p.plaza_tel_of1,
                           p.plaza_tel_of2, p.plaza_conmut, p.plaza_ext1, p.plaza_ext2, p.usuario,
                           p.fec_modifico, a.id_nombramiento, a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p, td_empleado e, tc_atributo_puesto a
                     WHERE p.plaza_rfc = e.rfc_empleado
                       AND p.ID_PUESTO_NOM = a.id_atributo_puesto
                       AND p.id_grupo_pago = 'H'
                       AND p.id_sit_plaza LIKE 'O%'
                       AND ##p.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tdPlazaFinContHonorariosProrroga">
                    SELECT DISTINCT TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') AS ID,
                                    TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') AS descripcion
                               FROM td_plaza p, td_empleado e
                              WHERE p.plaza_rfc = e.rfc_empleado
                                AND p.id_grupo_pago = 'H'
                                AND p.id_sit_plaza LIKE 'O%'
                                AND ##p.id_unidad_nom#SIREHUNIDAD#PRIMARY##
                </prop>
                <prop key="tdPlazaUnidadesHonorariosProrroga">
                    SELECT DISTINCT u.id_unidad AS clave,
                                    u.id_unidad || ' - ' || u.desc_unidad AS descripcion
                               FROM td_plaza p, td_empleado e, tc_unidad u
                              WHERE p.plaza_rfc = e.rfc_empleado
                                AND p.id_unidad_pre = u.id_unidad
                                AND p.id_grupo_pago = 'H'
                                AND p.id_sit_plaza LIKE 'O%'
                                AND TO_CHAR (p.plaza_fin_cont, 'dd/MM/yyyy') = ?
                                AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                                AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                                order by u.id_unidad                         
                </prop>
                <!-- FIN MASIVOS HONORARIOS PRORROGA -->
                <!-- INICIO MASIVOS EVENTUALES CAMBIO DE ADSCRIPCION -->
                <prop key="tdPlazaCambioAdscripcionEventuales">
                    SELECT p.id_plaza, p.id_puesto_nom, p.id_zona_eco_nom, p.id_unidad_nom,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.id_sit_plaza, a.id_nombramiento,
                           a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p INNER JOIN tc_atributo_puesto a
                           ON p.id_puesto_nom = id_atributo_puesto
                           inner join tc_unidad u on
                           p.id_unidad_pre = u.id_unidad
                     WHERE p.id_grupo_pago = 'V' AND p.id_sit_plaza LIKE 'O%'
                    AND ROWNUM <![CDATA[<]]> 500
                    AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##      
                    AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                </prop>
                <prop key="tdPlazaUnidadesCambioAdscripcionOrigenEventuales">
                    SELECT u.id_unidad AS clave, u.id_unidad || ' - ' ||
                              u.desc_unidad || ' - ('
                           || (SELECT COUNT (*)
                                 FROM td_plaza p INNER JOIN tc_atributo_puesto a
                                      ON p.id_puesto_nom = id_atributo_puesto
                                WHERE p.id_grupo_pago = 'V'
                                  AND p.id_sit_plaza LIKE 'O%'
                                  AND p.id_unidad_pre = u.id_unidad)
                           || ')' AS descripcion
                      FROM tc_unidad u
                     WHERE 
                        (SELECT COUNT (*)
                           FROM td_plaza p INNER JOIN tc_atributo_puesto a
                             ON p.id_puesto_nom = id_atributo_puesto
                          WHERE p.id_grupo_pago = 'V'
                            AND p.id_sit_plaza LIKE 'O%'
                            AND p.id_unidad_pre = u.id_unidad) > 0
                       AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <!-- INICIO MASIVOS EVENTUALES CAMBIO DE ADSCRIPCION -->
                <!-- INICIO MASIVOS HONORARIOS CAMBIO DE ADSCRIPCION -->
                <prop key="tdPlazaCambioAdscripcionHonorarios">
                    SELECT p.id_plaza, p.id_puesto_nom, p.id_zona_eco_nom, p.id_unidad_nom,
                           p.plaza_ini_cont, p.plaza_fin_cont, p.id_sit_plaza, a.id_nombramiento,
                           a.id_jerarquia, a.id_nivel_pto
                      FROM td_plaza p INNER JOIN tc_atributo_puesto a
                           ON p.id_puesto_nom = id_atributo_puesto
                           inner join tc_unidad u on
                           p.id_unidad_pre = u.id_unidad
                     WHERE p.id_grupo_pago = 'H' AND p.id_sit_plaza LIKE 'O%'
                      AND ##p.ID_UNIDAD_NOM#SIREHUNIDAD#PRIMARY##      
                    AND ##uni_ciclo#=#OPERATIONAL_YEAR##
                </prop>
                <prop key="tdPlazaUnidadesCambioAdscripcionOrigenHonorarios">
                    SELECT u.id_unidad AS clave, u.id_unidad || ' - ' ||
                              u.desc_unidad || ' - ('
                           || (SELECT COUNT (*)
                                 FROM td_plaza p INNER JOIN tc_atributo_puesto a
                                      ON p.id_puesto_nom = id_atributo_puesto
                                WHERE p.id_grupo_pago = 'H'
                                  AND p.id_sit_plaza LIKE 'O%'
                                  AND p.id_unidad_pre = u.id_unidad)
                           || ')' AS descripcion
                      FROM tc_unidad u
                     WHERE 
                        (SELECT COUNT (*)
                           FROM td_plaza p INNER JOIN tc_atributo_puesto a
                             ON p.id_puesto_nom = id_atributo_puesto
                          WHERE p.id_grupo_pago = 'H'
                            AND p.id_sit_plaza LIKE 'O%'
                            AND p.id_unidad_pre = u.id_unidad) > 0
                       AND ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>
                <!-- FIN MASIVOS HONORARIOS CAMBIO DE ADSCRIPCION -->
                <prop key="tdPlazaUnidadesCambioAdscripcionDestino">
                    SELECT u.id_unidad AS clave, u.id_unidad || ' - ' ||
                              u.desc_unidad AS descripcion
                      FROM tc_unidad u
                     WHERE ##u.uni_ciclo#=#OPERATIONAL_YEAR##
                       AND ##u.id_unidad#SIREHUNIDAD#PRIMARY##
                </prop>                
                <prop key="catalogoTercerosEnteros">
                    SELECT id_tercero, id_tercero  || ' - ' ||   tc_tercero.desc_tercero
                    FROM tc_tercero 
                    where id_tercero='M'
                </prop>
                <prop key="quincenasInic">
                    SELECT TO_CHAR(D1,'09') D1 ,TO_CHAR(D1,'09') D2 FROM(
                    SELECT ROWNUM D1 FROM ALL_SYNONYMS
                    WHERE ROWNUM<![CDATA[<]]>25)
                    ORDER BY D1
                </prop>
                <prop key="quincenasFinal">
                    SELECT TO_CHAR(D1,'09') D1, TO_CHAR(D1,'09') D2 
                    FROM(SELECT ROWNUM D1 FROM ALL_SYNONYMS 
                    WHERE ROWNUM <![CDATA[<]]> 25) WHERE D1 > TO_NUMBER(?) ORDER BY D1
                </prop>
				
		<!--Reporte de nómina entre quincenas Altas y Bajas -->
                <prop key="sacaQnasPago1">
                    SELECT HP_QNA_PAGO AS ID, HP_QNA_PAGO AS HPQNAPAGO
                    FROM TN_HISTORICO_PAGO HP
                    WHERE HP_QNA_PAGO >= 201201
                    GROUP BY HP_QNA_PAGO
                    ORDER BY HP_QNA_PAGO DESC
                </prop>
                <prop key="sacaQnasIssste">
                    SELECT HP_QNA_PAGO AS ID, HP_QNA_PAGO AS HPQNAPAGO
                    FROM TN_HISTORICO_PAGO HP
                    WHERE SUBSTR(HP_QNA_PAGO,1,4) >= 2013
                      AND SUBSTR(HP_QNA_PAGO,5,2) IN ('02','03','04','06','08','10','12','14','16','18','20','22','24')
                    GROUP BY HP_QNA_PAGO
                    ORDER BY HP_QNA_PAGO DESC
	       </prop>

                <prop key="muestraNominaQnasHistorico1">
                    SELECT A.ID_TIPO_NOMINA||'-'||A.ID_GRUPOPAGO_NOM||'-'||A.HP_NUM_COMPLEM as id,
                        A.ID_TIPO_NOMINA||'-'||A.ID_GRUPOPAGO_NOM||'-'||A.HP_NUM_COMPLEM||'-'||B.DESC_GRUPO_PAGO
                        ||'-'||C.DESC_TIPO_NOMINA||'- Consecutivo-'||NVL(TO_CHAR(A.HP_CONSEC_NOMINA),'S/C')||'- Complemento-'||A.HP_NUM_COMPLEM
                    FROM TN_HISTORICO_PAGO A, TC_GRUPO_PAGO B, TC_TIPO_NOMINA C
                    WHERE A.HP_QNA_PAGO = ?
                      AND A.ID_GRUPOPAGO_NOM =  B.ID_GRUPO_PAGO(+)
                      AND A.ID_TIPO_NOMINA   =  C.ID_TIPO_NOMINA(+)
                    GROUP BY A.ID_TIPO_NOMINA, A.ID_GRUPOPAGO_NOM, A.HP_NUM_COMPLEM, B.DESC_GRUPO_PAGO, C.DESC_TIPO_NOMINA, A.HP_CONSEC_NOMINA
                    ORDER BY A.ID_TIPO_NOMINA, A.HP_NUM_COMPLEM
                </prop>
                <prop key="muestraNominaQnasHistorico2">
                    SELECT A.ID_TIPO_NOMINA||'-'||A.ID_GRUPOPAGO_NOM||'-'||A.HP_NUM_COMPLEM as id,
                        A.ID_TIPO_NOMINA||'-'||A.ID_GRUPOPAGO_NOM||'-'||A.HP_NUM_COMPLEM||'-'||B.DESC_GRUPO_PAGO
                        ||'-'||C.DESC_TIPO_NOMINA||'- Consecutivo-'||NVL(TO_CHAR(A.HP_CONSEC_NOMINA),'S/C')||'- Complemento-'||A.HP_NUM_COMPLEM
                    FROM TN_HISTORICO_PAGO A, TC_GRUPO_PAGO B, TC_TIPO_NOMINA C
                    WHERE A.HP_QNA_PAGO = ?
                      AND A.ID_GRUPOPAGO_NOM =  B.ID_GRUPO_PAGO(+)
                      AND A.ID_TIPO_NOMINA   =  C.ID_TIPO_NOMINA(+)
                    GROUP BY A.ID_TIPO_NOMINA, A.ID_GRUPOPAGO_NOM, A.HP_NUM_COMPLEM, B.DESC_GRUPO_PAGO, C.DESC_TIPO_NOMINA, A.HP_CONSEC_NOMINA
                    ORDER BY A.ID_TIPO_NOMINA, A.HP_NUM_COMPLEM
                </prop>
                <prop key="altasBajasQnas">
                    SELECT nvl(a.hp_qna_pago,b.hp_qna_pago-1) quincenaAnterior,nvl(b.hp_qna_pago,a.hp_qna_pago+1) quincenaReferencia,
                        nvl2(a.hp_rfc,1,0) existeQuincenaAnterior, nvl2(b.hp_rfc,1,0) existeQuincenaReferencia,
                        nvl(a.comprobante,b.comprobante) comprobante,nvl(a.empleado,b.empleado) empleado,
                        nvl(a.puesto_funcional,b.puesto_funcional) puestoFuncional,nvl(a.curp,b.curp) curp,nvl
                        (a.cve_banco,b.cve_banco) cveBanco,nvl(a.plaza,b.plaza) plaza,
                        nvl(a.nivel_herramienta,b.nivel_herramienta) nivelHerramienta,nvl(a.imss_issste,b.imss_issste) imssIssste ,
                        nvl(a.unidad_fisica,b.unidad_fisica) unidadFisica,nvl(a.pcp,b.pcp) pcp,
                        nvl(a.zona_pagadora,b.zona_pagadora) zonaPagadora,nvl(a.num_pension,b.num_pension) numPension,
                        nvl(a.regcont_fec_pago,b.regcont_fec_pago) regcontFecPago,nvl(a.nomina,b.nomina) 
                        nomina,nvl(a.leyenda_cancelado,b.leyenda_cancelado) leyendaCancelado,nvl(a.hp_folio,b.hp_folio) hpFolio,
                        nvl(a.hp_dif_folio,b.hp_dif_folio) hpDifFolio,nvl(a.hp_neto_pago,b.hp_neto_pago) hpNetoPago,
                        nvl(a.deducciones,b.deducciones) deducciones,nvl(a.percepciones,b.percepciones) percepciones
                    FROM
                        (SELECT
                            ant_qna.hp_rfc,ant_qna.hp_qna_pago,lpad(ant_qna.HP_FOLIO,10,'0') comprobante,
                            case when ant_qna.hp_num_pension != 0 then substr(ant_qna.hp_rfc,0,4)||'-'||substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||
                            td_pension.beneficiaria_pension else substr(ant_qna.hp_rfc,0,4)||'-'||substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||trim(trim
                            (td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                            ant_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                            substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                            case when substr(ant_qna.hp_clabe,1,3) > '990' or substr(ant_qna.hp_clabe,1,3) = '000' 
                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                            lpad(ant_qna.id_plaza,6,'0') plaza, tc_atributo_puesto.id_nivel_pto||'-'||ant_qna.id_rango_nom nivel_herramienta,
                            td_empleado.imss_issste, ant_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                            case when ant_qna.hp_pcp_pagados != 0 and ant_qna.hp_pcp_por_pagar != 0 
                            then lpad(ant_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(ant_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                            ant_qna.id_unidad_nom||'-'||substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                            lpad(ant_qna.hp_num_pension,2,'0') num_pension, to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                            ant_qna.id_tipo_nomina||'-'||substr(ant_qna.hp_qna_pago,0,4)||'-'||substr(ant_qna.hp_qna_pago,5,2)||'-'||ant_qna.hp_num_complem nomina,
                            case when ant_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                            ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO,
                            sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                            sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                        FROM
                            tn_historico_pago ant_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto,
                            tc_sit_pago, tc_atributo_puesto, td_plaza, td_pension, tc_banco, tn_reg_control
                        WHERE 1 = 1 and
                            ##ant_qna.hp_qna_pago## and
                            ##ant_qna.id_tipo_nomina## and
                            ##ant_qna.id_grupopago_nom## and 
                            ##ant_qna.hp_num_complem## and
                            ant_qna.hp_num_pension = 0 and
                            ant_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                            ant_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                            ant_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                            tn_concepto_pagado.id_tipo_cpto != 'C'  and
                            ant_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                            ant_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                            tc_unidad.uni_ciclo = to_number(substr(ant_qna.hp_qna_pago,1,4)) and
                            ant_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                            ant_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                            ant_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                            tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                            ant_qna.id_plaza = td_plaza.id_plaza(+) and
                            ant_qna.hp_rfc = td_pension.rfc_pension(+) and
                            ant_qna.hp_num_pension = td_pension.num_pension(+) and
                            (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                            substr(ant_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                            ant_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                            ant_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                            ant_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                        GROUP BY ant_qna.hp_ini_pago, ant_qna.hp_fin_pago, imss_issste, ant_qna.hp_num_pension,
                             ant_qna.hp_rfc, td_pension.beneficiaria_pension, td_empleado.primer_apellido, td_empleado.segundo_apellido,
                             td_empleado.nombre_empleado, ant_qna.id_puesto_nom, tc_puesto.desc_puesto, td_empleado.curp_empleado,
                             ant_qna.hp_clabe, tc_banco.desc_bancos, ant_qna.id_plaza, tc_atributo_puesto.id_nivel_pto,
                             ant_qna.id_rango_nom, ant_qna.id_unidad_nom, tc_unidad.DESC_UNIDAD, ant_qna.hp_pcp_pagados,
                             ant_qna.hp_pcp_por_pagar, ant_qna.id_zona_dist_nom, tn_reg_control.rc_fec_pago,
                             ant_qna.id_tipo_nomina, ant_qna.hp_qna_pago, ant_qna.hp_num_complem,
                             ant_qna.id_sit_pago, ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO
                            ) a full join
                        (SELECT
                            act_qna.hp_rfc,act_qna.hp_qna_pago,lpad(act_qna.HP_FOLIO,10,'0') comprobante,
                            case when act_qna.hp_num_pension != 0 then substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||
                            td_pension.beneficiaria_pension else substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||trim(trim
                            (td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                            act_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                            substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                            case when substr(act_qna.hp_clabe,1,3) > '990' or substr(act_qna.hp_clabe,1,3) = '000' 
                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco, lpad(act_qna.id_plaza,6,'0') plaza,
                            tc_atributo_puesto.id_nivel_pto||'-'||act_qna.id_rango_nom nivel_herramienta, td_empleado.imss_issste,
                            act_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                            case when act_qna.hp_pcp_pagados != 0 and act_qna.hp_pcp_por_pagar != 0 
                            then lpad(act_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(act_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                            act_qna.id_unidad_nom||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                            lpad(act_qna.hp_num_pension,2,'0') num_pension, to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                            act_qna.id_tipo_nomina||'-'||substr(act_qna.hp_qna_pago,0,4)||'-'||substr(act_qna.hp_qna_pago,5,2)||'-'||act_qna.hp_num_complem nomina,
                            case when act_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                            act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO, 
                            sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                            sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                        FROM
                            tn_historico_pago act_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto, tc_sit_pago,
                            tc_atributo_puesto, td_plaza, td_pension,  tc_banco, tn_reg_control
                        WHERE 1 = 1 and
                            ##act_qna.hp_qna_pago## and
                            ##act_qna.id_tipo_nomina## and
                            ##act_qna.id_grupopago_nom## and 
                            ##act_qna.hp_num_complem## and
                            act_qna.hp_num_pension = 0 and      
                            act_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                            act_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                            act_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                            tn_concepto_pagado.id_tipo_cpto != 'C'  and
                            act_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                            act_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                            tc_unidad.uni_ciclo = to_number(substr(act_qna.hp_qna_pago,1,4)) and
                            act_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                            act_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                            act_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                            tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                            act_qna.id_plaza = td_plaza.id_plaza(+) and
                            act_qna.hp_rfc = td_pension.rfc_pension(+) and
                            act_qna.hp_num_pension = td_pension.num_pension(+) and
                            (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                            substr(act_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                            act_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                            act_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                            act_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                        GROUP BY act_qna.hp_ini_pago, act_qna.hp_fin_pago, imss_issste, act_qna.hp_num_pension,
                             act_qna.hp_rfc, td_pension.beneficiaria_pension, td_empleado.primer_apellido, td_empleado.segundo_apellido,
                             td_empleado.nombre_empleado, act_qna.id_puesto_nom, tc_puesto.desc_puesto, td_empleado.curp_empleado,
                             act_qna.hp_clabe, tc_banco.desc_bancos, act_qna.id_plaza, tc_atributo_puesto.id_nivel_pto,
                             act_qna.id_rango_nom, act_qna.id_unidad_nom, tc_unidad.DESC_UNIDAD, act_qna.hp_pcp_pagados,
                             act_qna.hp_pcp_por_pagar, act_qna.id_zona_dist_nom, tn_reg_control.rc_fec_pago,
                             act_qna.id_tipo_nomina, act_qna.hp_qna_pago, act_qna.hp_num_complem,
                             act_qna.id_sit_pago, act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO
                              ) b on a.hp_rfc=b.hp_rfc 
                    WHERE (a.hp_rfc is null or b.hp_rfc is null)
                    ORDER BY comprobante 
                </prop>
                <!--Fin procedimientos para reporte de nómina entre quincenas Altas y Bajas -->
                <!--Procedimiento para comparar 2 nóminas y obtener cambios en conceptos    -->
                <prop key="comparaConceptos">
                    SELECT * FROM
                    (SELECT nvl(c.cp_folio,ant_qna.cp_folio) cpFolio,
                            nvl(c.cp_dif_folio,ant_qna.cp_dif_folio) cpDifDolio, 
                            ant_qna.quincena_anterior quincenaAnterior,
                            b.hp_qna_pago quincenaReferencia,
                            nvl(a.comprobante,ant_qna.comprobante) comprobante,
                            nvl(a.empleado,ant_qna.empleado) empleado,
                            nvl(a.puesto_funcional, ant_qna.puesto_funcional) puestoFuncional,
                            nvl(a.curp,ant_qna.curp) curp,
                            nvl(a.cve_banco,ant_qna.cve_banco) cveBanco,
                            nvl(a.plaza,ant_qna.plaza) plaza,
                            nvl(a.nivel_herramienta,ant_qna.nivel_herramienta) nivelHerramienta,
                            nvl(a.imss_issste,ant_qna.imss_issste) imssIssste, 
                            nvl(a.unidad_fisica,ant_qna.unidad_fisica) unidadFisica,
                            nvl(a.pcp,ant_qna.pcp) pcp,
                            nvl(a.zona_pagadora,ant_qna.zona_pagadora) zonaPagadora,
                            nvl(a.num_pension,ant_qna.num_pension) numPension,
                            nvl(a.regcont_fec_pago,ant_qna.regcont_fec_pago) regcontFecPago,
                            nvl(a.nomina,ant_qna.nomina) nomina,
                            nvl(a.leyenda_cancelado,ant_qna.leyenda_cancelado) leyendaCancelado,
                            nvl(a.hp_folio,ant_qna.hp_folio) hpFolio,
                            nvl(a.hp_dif_folio,ant_qna.hp_dif_folio) hpDifFolio,
                            nvl(a.hp_neto_pago,ant_qna.hp_neto_pago) hpNetoPago,
                            nvl(a.deducciones,ant_qna.deducciones) deducciones,
                            nvl(a.percepciones,ant_qna.percepciones) percepciones,
                            c.concepto_pago conceptoPagoQnaRef,
                            c.importe importeQnaRef,
                            ant_qna.concepto_pago_ant_qna conceptoPagoQnaAnt,
                            ant_qna.importe_ant_qna importeQnaAnt
                    FROM
                            (SELECT
                                    tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio, 
                                    ant_qna.hp_rfc,
                                    ant_qna.hp_qna_pago,
                                    lpad(ant_qna.HP_FOLIO,10,'0') comprobante,
                                    case when ant_qna.hp_num_pension != 0 then substr(ant_qna.hp_rfc,0,4)||'-'||
                                            substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||td_pension.beneficiaria_pension 
                                            else substr(ant_qna.hp_rfc,0,4)||'-'||substr(ant_qna.hp_rfc,5,6)||'-'||
                                            substr(ant_qna.hp_rfc,11,3)||'  '||trim(trim(td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||
                                            trim(td_empleado.nombre_empleado) end empleado,
                                    ant_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                                    substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                                    case when substr(ant_qna.hp_clabe,1,3) > '990' or substr(ant_qna.hp_clabe,1,3) = '000' 
                                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                                    lpad(ant_qna.id_plaza,6,'0') plaza,
                                    tc_atributo_puesto.id_nivel_pto||'-'||ant_qna.id_rango_nom nivel_herramienta,
                                    td_empleado.imss_issste,
                                    ant_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                                    case when ant_qna.hp_pcp_pagados != 0 and ant_qna.hp_pcp_por_pagar != 0 
                                            then lpad(ant_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(ant_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                                    ant_qna.id_unidad_nom||'-'||substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                                            substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                                    lpad(ant_qna.hp_num_pension,2,'0') num_pension,
                                    to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                                    ant_qna.id_tipo_nomina||'-'||substr(ant_qna.hp_qna_pago,0,4)||'-'||
                                            substr(ant_qna.hp_qna_pago,5,2)||'-'||ant_qna.hp_num_complem nomina,
                                    case when ant_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                                    ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                            FROM
                                    tn_historico_pago ant_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto, tc_sit_pago, 
                                    tc_atributo_puesto, td_plaza, td_pension, tc_banco, tn_reg_control
                            WHERE 1 = 1 and
                                    ##ant_qna.hp_qna_pago## and
                                    ##ant_qna.id_tipo_nomina## and
                                    ##ant_qna.id_grupopago_nom## and 
                                    ##ant_qna.hp_num_complem## and
                                    ant_qna.hp_num_pension = 0 and
                                    ant_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                                    ant_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                                    ant_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                                    tn_concepto_pagado.id_tipo_cpto != 'C'  and
                                    ant_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                                    ant_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                                    tc_unidad.uni_ciclo = to_number(substr(ant_qna.hp_qna_pago,1,4)) and
                                    ant_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                                    ant_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                                    ant_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                                    tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                                    ant_qna.id_plaza = td_plaza.id_plaza(+) and
                                    ant_qna.hp_rfc = td_pension.rfc_pension(+) and
                                    ant_qna.hp_num_pension = td_pension.num_pension(+) and
                                    (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                                    substr(ant_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                                    ant_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                                    ant_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                                    ant_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                            GROUP BY tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    ant_qna.hp_ini_pago, 
                                    ant_qna.hp_fin_pago, 
                                    imss_issste,         
                                    ant_qna.hp_num_pension,
                                    ant_qna.hp_rfc, 
                                    td_pension.beneficiaria_pension, 
                                    td_empleado.primer_apellido, 
                                    td_empleado.segundo_apellido,
                                    td_empleado.nombre_empleado, 
                                    ant_qna.id_puesto_nom, 
                                    tc_puesto.desc_puesto, 
                                    td_empleado.curp_empleado,
                                    ant_qna.hp_clabe, 
                                    tc_banco.desc_bancos, 
                                    ant_qna.id_plaza, 
                                    tc_atributo_puesto.id_nivel_pto,
                                    ant_qna.id_rango_nom, 
                                    ant_qna.id_unidad_nom, 
                                    tc_unidad.DESC_UNIDAD, 
                                    ant_qna.hp_pcp_pagados,
                                    ant_qna.hp_pcp_por_pagar, 
                                    ant_qna.id_zona_dist_nom, 
                                    tn_reg_control.rc_fec_pago,
                                    ant_qna.id_tipo_nomina, 
                                    ant_qna.hp_qna_pago, 
                                    ant_qna.hp_num_complem,
                                    ant_qna.id_sit_pago, 
                                    ant_qna.hp_folio, 
                                    ant_qna.hp_dif_folio, 
                                    ant_qna.HP_NETO_PAGO
                            ) a join
                            (SELECT
                                    tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    act_qna.hp_rfc,
                                    act_qna.hp_qna_pago,
                                    lpad(act_qna.HP_FOLIO,10,'0') comprobante,
                                    case when act_qna.hp_num_pension != 0 then substr(act_qna.hp_rfc,0,4)||'-'||
                                            substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||td_pension.beneficiaria_pension 
                                            else substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||
                                            substr(act_qna.hp_rfc,11,3)||'  '||trim(trim(td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))
                                            ||' '||trim(td_empleado.nombre_empleado) end empleado,
                                    act_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                                    substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                                    case when substr(act_qna.hp_clabe,1,3) > '990' or substr(act_qna.hp_clabe,1,3) = '000' then tc_banco.desc_bancos 
                                            else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                                    lpad(act_qna.id_plaza,6,'0') plaza,
                                    tc_atributo_puesto.id_nivel_pto||'-'||act_qna.id_rango_nom nivel_herramienta,
                                    td_empleado.imss_issste,
                                    act_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                                    case when act_qna.hp_pcp_pagados != 0 and act_qna.hp_pcp_por_pagar != 0 
                                            then lpad(act_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(act_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                                    act_qna.id_unidad_nom||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                                            substr(lpad(act_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                                    lpad(act_qna.hp_num_pension,2,'0') num_pension,
                                    to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                                    act_qna.id_tipo_nomina||'-'||substr(act_qna.hp_qna_pago,0,4)||'-'||
                                            substr(act_qna.hp_qna_pago,5,2)||'-'||act_qna.hp_num_complem nomina,
                                    case when act_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                                    act_qna.hp_folio, 
                                    act_qna.hp_dif_folio, 
                                    act_qna.HP_NETO_PAGO,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                            FROM
                                    tn_historico_pago act_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto, tc_sit_pago, tc_atributo_puesto,
                                    td_plaza, td_pension, tc_banco, tn_reg_control
                            WHERE 1 = 1 and
                                    ##act_qna.hp_qna_pago## and
                                    ##act_qna.id_tipo_nomina## and
                                    ##act_qna.id_grupopago_nom## and 
                                    ##act_qna.hp_num_complem## and
                                    act_qna.hp_num_pension = 0 and
                                    act_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                                    act_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                                    act_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                                    tn_concepto_pagado.id_tipo_cpto != 'C'  and
                                    act_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                                    act_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                                    tc_unidad.uni_ciclo = to_number(substr(act_qna.hp_qna_pago,1,4)) and
                                    act_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                                    act_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                                    act_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                                    tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                                    act_qna.id_plaza = td_plaza.id_plaza(+) and
                                    act_qna.hp_rfc = td_pension.rfc_pension(+) and
                                    act_qna.hp_num_pension = td_pension.num_pension(+) and
                                    (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                                    substr(act_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                                    act_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                                    act_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                                    act_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                            GROUP BY tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    act_qna.hp_ini_pago, 
                                    act_qna.hp_fin_pago, 
                                    imss_issste,         
                                    act_qna.hp_num_pension,
                                    act_qna.hp_rfc, 
                                    td_pension.beneficiaria_pension, 
                                    td_empleado.primer_apellido, 
                                    td_empleado.segundo_apellido,
                                    td_empleado.nombre_empleado, 
                                    act_qna.id_puesto_nom, 
                                    tc_puesto.desc_puesto, 
                                    td_empleado.curp_empleado,
                                    act_qna.hp_clabe, 
                                    tc_banco.desc_bancos, 
                                    act_qna.id_plaza, 
                                    tc_atributo_puesto.id_nivel_pto,
                                    act_qna.id_rango_nom, 
                                    act_qna.id_unidad_nom, 
                                    tc_unidad.DESC_UNIDAD, 
                                    act_qna.hp_pcp_pagados,
                                    act_qna.hp_pcp_por_pagar, 
                                    act_qna.id_zona_dist_nom, 
                                    tn_reg_control.rc_fec_pago,
                                    act_qna.id_tipo_nomina, 
                                    act_qna.hp_qna_pago, 
                                    act_qna.hp_num_complem,
                                    act_qna.id_sit_pago, 
                                    act_qna.hp_folio, 
                                    act_qna.hp_dif_folio, 
                                    act_qna.HP_NETO_PAGO
                            ) b on a.hp_rfc=b.hp_rfc
                            join (
                                    SELECT tn_concepto_pagado.cp_folio,
                                            tn_concepto_pagado.cp_dif_folio,
                                            case when tn_concepto_pagado.id_cpto_pago = '0A' then '42A  '||tc_concepto_pago.desc_con_pag
                                            when tn_concepto_pagado.id_cpto_pago = '0B' then '42B  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0C' then '199  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0D' then '102  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0E' then '140  '||tc_concepto_pago.desc_con_pag 
                                            else tn_concepto_pagado.id_cpto_pago||'  '||tc_concepto_pago.desc_con_pag end concepto_pago,
                                            case when tn_concepto_pagado.id_tipo_cpto = 'D' then tn_concepto_pagado.cp_monto * -1 
                                            else tn_concepto_pagado.cp_monto end importe
                                    FROM
                                            tn_concepto_pagado left join tc_concepto_pago on  tn_concepto_pagado.id_tipo_cpto = tc_concepto_pago.id_tipo_cpto and                                 tn_concepto_pagado.id_cpto_pago = tc_concepto_pago.id_concepto
                                            WHERE tn_concepto_pagado.id_tipo_cpto != 'C' 
                                            ) c on a.cp_folio = c.cp_folio and a.cp_dif_folio = c.cp_dif_folio
                            full join (
                            SELECT d.cp_folio,
                                    d.cp_dif_folio, 
                                    a.hp_rfc, 
                                    a.hp_qna_pago quincena_anterior,
                                    b.hp_qna_pago quincena_referencia,
                                    a.comprobante comprobante,
                                    a.empleado empleado,
                                    a.puesto_funcional puesto_funcional,
                                    a.curp curp,
                                    a.cve_banco cve_banco,
                                    a.plaza plaza,
                                    a.nivel_herramienta nivel_herramienta,
                                    a.imss_issste imss_issste, 
                                    a.unidad_fisica unidad_fisica,
                                    a.pcp pcp, 
                                    a.zona_pagadora zona_pagadora,
                                    a.num_pension num_pension,
                                    a.regcont_fec_pago regcont_fec_pago,
                                    a.nomina nomina,
                                    a.leyenda_cancelado leyenda_cancelado,
                                    a.hp_folio hp_folio,
                                    a.hp_dif_folio hp_dif_folio,
                                    a.hp_neto_pago hp_neto_pago,
                                    a.deducciones deducciones,
                                    a.percepciones percepciones,
                                    d.concepto_pago concepto_pago_ant_qna,
                                    d.importe importe_ant_qna
                            FROM
                            (SELECT
                                    tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio, 
                                    ant_qna.hp_rfc,
                                    ant_qna.hp_qna_pago,
                                    lpad(ant_qna.HP_FOLIO,10,'0') comprobante,
                                    case when ant_qna.hp_num_pension != 0 then substr(ant_qna.hp_rfc,0,4)||'-'||
                                            substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||
                                            td_pension.beneficiaria_pension 
                                            else substr(ant_qna.hp_rfc,0,4)||'-'||substr(ant_qna.hp_rfc,5,6)||'-'||
                                            substr(ant_qna.hp_rfc,11,3)||'  '||trim(trim(td_empleado.primer_apellido)||' ' ||
                                            trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                                    ant_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                                    substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                                    case when substr(ant_qna.hp_clabe,1,3) > '990' or substr(ant_qna.hp_clabe,1,3) = '000' 
                                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos     end cve_banco,
                                    lpad(ant_qna.id_plaza,6,'0') plaza,
                                    tc_atributo_puesto.id_nivel_pto||'-'||ant_qna.id_rango_nom nivel_herramienta,
                                    td_empleado.imss_issste,
                                    ant_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                                    case when ant_qna.hp_pcp_pagados != 0 and ant_qna.hp_pcp_por_pagar != 0 then lpad(ant_qna.hp_pcp_pagados,3,'0')
                                            || ' de ' || lpad    (ant_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                                    ant_qna.id_unidad_nom||'-'||substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                                            substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),3,3)     zona_pagadora,
                                    lpad(ant_qna.hp_num_pension,2,'0') num_pension,
                                    to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                                    ant_qna.id_tipo_nomina||'-'||substr(ant_qna.hp_qna_pago,0,4)||'-'||substr(ant_qna.hp_qna_pago,5,2)
                                            ||'-'||ant_qna.hp_num_complem    nomina,
                                    case when ant_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                                    ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                            FROM
                                    tn_historico_pago ant_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto, tc_sit_pago, tc_atributo_puesto,
                                    td_plaza, td_pension, tc_banco, tn_reg_control
                            WHERE 1 = 1 and
                                    ##ant_qna.hp_qna_pago## and
                                    ##ant_qna.id_tipo_nomina## and
                                    ##ant_qna.id_grupopago_nom## and 
                                    ##ant_qna.hp_num_complem## and
                                    ant_qna.hp_num_pension = 0 and
                                    ant_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                                    ant_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                                    ant_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                                    tn_concepto_pagado.id_tipo_cpto != 'C'  and
                                    ant_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                                    ant_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                                    tc_unidad.uni_ciclo = to_number(substr(ant_qna.hp_qna_pago,1,4)) and
                                    ant_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                                    ant_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                                    ant_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                                    tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                                    ant_qna.id_plaza = td_plaza.id_plaza(+) and
                                    ant_qna.hp_rfc = td_pension.rfc_pension(+) and
                                    ant_qna.hp_num_pension = td_pension.num_pension(+) and
                                    (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                                    substr(ant_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                                    ant_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                                    ant_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                                    ant_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                            GROUP BY tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    ant_qna.hp_ini_pago, 
                                    ant_qna.hp_fin_pago, 
                                    imss_issste,     
                                    ant_qna.hp_num_pension,
                                    ant_qna.hp_rfc, 
                                    td_pension.beneficiaria_pension, 
                                    td_empleado.primer_apellido, 
                                    td_empleado.segundo_apellido,
                                    td_empleado.nombre_empleado, 
                                    ant_qna.id_puesto_nom, 
                                    tc_puesto.desc_puesto, 
                                    td_empleado.curp_empleado,
                                    ant_qna.hp_clabe, 
                                    tc_banco.desc_bancos, 
                                    ant_qna.id_plaza, 
                                    tc_atributo_puesto.id_nivel_pto,
                                    ant_qna.id_rango_nom, 
                                    ant_qna.id_unidad_nom, 
                                    tc_unidad.DESC_UNIDAD, 
                                    ant_qna.hp_pcp_pagados,
                                    ant_qna.hp_pcp_por_pagar, 
                                    ant_qna.id_zona_dist_nom, 
                                    tn_reg_control.rc_fec_pago,
                                    ant_qna.id_tipo_nomina, 
                                    ant_qna.hp_qna_pago, 
                                    ant_qna.hp_num_complem,
                                    ant_qna.id_sit_pago, 
                                    ant_qna.hp_folio, 
                                    ant_qna.hp_dif_folio, 
                                    ant_qna.HP_NETO_PAGO
                            ) a join
                            (SELECT
                                    tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    act_qna.hp_rfc,
                                    act_qna.hp_qna_pago,
                                    lpad(act_qna.HP_FOLIO,10,'0') comprobante,
                                    case when act_qna.hp_num_pension != 0 then substr(act_qna.hp_rfc,0,4)||'-'||
                                            substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||
                                            td_pension.beneficiaria_pension 
                                            else substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||
                                            substr(act_qna.hp_rfc,11,3)||'  '||trim(trim(td_empleado.primer_apellido)||' ' ||
                                            trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                                    act_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                                    substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                                    case when substr(act_qna.hp_clabe,1,3) > '990' or substr(act_qna.hp_clabe,1,3) = '000' then tc_banco.desc_bancos 
                                            else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                                    lpad(act_qna.id_plaza,6,'0') plaza,
                                    tc_atributo_puesto.id_nivel_pto||'-'||act_qna.id_rango_nom nivel_herramienta,
                                    td_empleado.imss_issste,
                                    act_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                                    case when act_qna.hp_pcp_pagados != 0 and act_qna.hp_pcp_por_pagar != 0 then lpad(act_qna.hp_pcp_pagados,3,'0')
                                            || ' de ' || lpad(act_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                                    act_qna.id_unidad_nom||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                                            substr(lpad(act_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                                    lpad(act_qna.hp_num_pension,2,'0') num_pension,
                                    to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                                    act_qna.id_tipo_nomina||'-'||substr(act_qna.hp_qna_pago,0,4)||'-'||substr(act_qna.hp_qna_pago,5,2)
                                            ||'-'||act_qna.hp_num_complem nomina,
                                    case when act_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                                    act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                                    sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                            FROM
                                    tn_historico_pago act_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto, tc_sit_pago,
                                    tc_atributo_puesto, td_plaza, td_pension, tc_banco, tn_reg_control
                            WHERE 1 = 1 and
                                    ##act_qna.hp_qna_pago## and
                                    ##act_qna.id_tipo_nomina## and
                                    ##act_qna.id_grupopago_nom## and 
                                    ##act_qna.hp_num_complem## and
                                    act_qna.hp_num_pension = 0 and
                                    act_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                                    act_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                                    act_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                                    tn_concepto_pagado.id_tipo_cpto != 'C'  and
                                    act_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                                    act_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                                    tc_unidad.uni_ciclo = to_number(substr(act_qna.hp_qna_pago,1,4)) and
                                    act_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                                    act_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                                    act_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                                    tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                                    act_qna.id_plaza = td_plaza.id_plaza(+) and
                                    act_qna.hp_rfc = td_pension.rfc_pension(+) and
                                    act_qna.hp_num_pension = td_pension.num_pension(+) and
                                    (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                                    substr(act_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                                    act_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                                    act_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                                    act_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                            GROUP BY tn_concepto_pagado.cp_folio,
                                    tn_concepto_pagado.cp_dif_folio,
                                    act_qna.hp_ini_pago, 
                                    act_qna.hp_fin_pago, 
                                    imss_issste, 
                                    act_qna.hp_num_pension,
                                    act_qna.hp_rfc, 
                                    td_pension.beneficiaria_pension, 
                                    td_empleado.primer_apellido, 
                                    td_empleado.segundo_apellido,
                                    td_empleado.nombre_empleado, 
                                    act_qna.id_puesto_nom, 
                                    tc_puesto.desc_puesto, td_empleado.curp_empleado,
                                    act_qna.hp_clabe, 
                                    tc_banco.desc_bancos, 
                                    act_qna.id_plaza, 
                                    tc_atributo_puesto.id_nivel_pto,
                                    act_qna.id_rango_nom, 
                                    act_qna.id_unidad_nom, 
                                    tc_unidad.DESC_UNIDAD, 
                                    act_qna.hp_pcp_pagados,
                                    act_qna.hp_pcp_por_pagar, 
                                    act_qna.id_zona_dist_nom, 
                                    tn_reg_control.rc_fec_pago,
                                    act_qna.id_tipo_nomina, 
                                    act_qna.hp_qna_pago, 
                                    act_qna.hp_num_complem,
                                    act_qna.id_sit_pago, 
                                    act_qna.hp_folio, 
                                    act_qna.hp_dif_folio, 
                                    act_qna.HP_NETO_PAGO
                            ) b on a.hp_rfc=b.hp_rfc
                            join (
                                    SELECT tn_concepto_pagado.cp_folio,
                                            tn_concepto_pagado.cp_dif_folio,
                                            case when tn_concepto_pagado.id_cpto_pago = '0A' then '42A  '||tc_concepto_pago.desc_con_pag
                                            when tn_concepto_pagado.id_cpto_pago = '0B' then '42B  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0C' then '199  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0D' then '102  '||tc_concepto_pago.desc_con_pag 
                                            when tn_concepto_pagado.id_cpto_pago = '0E' then '140  '||tc_concepto_pago.desc_con_pag 
                                            else tn_concepto_pagado.id_cpto_pago||'  '||tc_concepto_pago.desc_con_pag end concepto_pago,
                                            case when tn_concepto_pagado.id_tipo_cpto = 'D' then tn_concepto_pagado.cp_monto * -1 
                                            else tn_concepto_pagado.cp_monto end importe
                                    FROM
                                            tn_concepto_pagado left join tc_concepto_pago on tn_concepto_pagado.id_tipo_cpto = tc_concepto_pago.id_tipo_cpto 
                                            and tn_concepto_pagado.id_cpto_pago = tc_concepto_pago.id_concepto
                                    WHERE tn_concepto_pagado.id_tipo_cpto != 'C' 
                                    ) d on b.cp_folio = d.cp_folio and b.cp_dif_folio = d.cp_dif_folio
                                    ) ant_qna on a.hp_rfc=ant_qna.hp_rfc and c.concepto_pago=ant_qna.concepto_pago_ant_qna 
                                    )
                    WHERE nvl(importeQnaRef,0) != nvl(importeQnaAnt,0)
                </prop>
                <!--Fin procedimientos para comparar conceptos en QNAS -->
                <!--Procedimiento para comparar cambios en datos generales en QNAS    -->
                <prop key="comparaGenerales">
                    SELECT 
                    a.hp_qna_pago quincenaAnterior, 
                    b.hp_qna_pago quincenaReferencia,
                    a.comprobante comprobanteAnterior, 
                    b.comprobante comprobanteReferencia,
                    a.empleado empleadoAnterior, 
                    b.empleado empleadoReferencia,
                    a.puesto_funcional puestoFuncionalAnterior, 
                    b.puesto_funcional puestoFuncionalReferencia,
                    a.curp curpAnterior, 
                    b.curp curpRefencia,
                    a.cve_banco cveBancoAnterior, 
                    b.cve_banco cveBancoReferencia,
                    a.plaza plazaAnterior, 
                    b.plaza plazaReferencia,
                    a.nivel_herramienta nivelHerramientaAnterior, 
                    b.nivel_herramienta nivelHerramientaReferencia,
                    a.imss_issste imssIsssteAnterior, 
                    b.imss_issste imssIsssteReferencia, 
                    a.unidad_fisica unidadFisicaAnterior, 
                    b.unidad_fisica unidadFisicaReferencia,
                    a.pcp pcpAnterior, 
                    b.pcp pcpReferencia,
                    a.zona_pagadora zonaPagadoraAnterior, 
                    b.zona_pagadora zonaPagadoraReferencia,
                    a.num_pension numPensionAnterior,
                    b.num_pension numPensionReferencia,
                    a.regcont_fec_pago regcontFecPagoAnterior, 
                    b.regcont_fec_pago regcontFecPagoReferencia,
                    a.nomina nominaAnterior, 
                    b.nomina nominaReferencia,
                    a.leyenda_cancelado leyendaCanceladoAnterior, 
                    b.leyenda_cancelado leyendaCanceladoReferencia,
                    a.hp_folio hpFolioAnterior, 
                    b.hp_folio hpFolioReferencia,
                    a.hp_dif_folio hpDifFolioAnterior, 
                    b.hp_dif_folio hpDifFolioReferencia,
                    a.hp_neto_pago hpNetoPagoAnterior, 
                    b.hp_neto_pago hpNetoPagoReferencia,
                    a.deducciones deduccionesAnterior, 
                    b.deducciones deduccionesReferencia,
                    a.percepciones percepcionesAnterior, 
                    b.percepciones percepcionesReferencia
                    FROM
                    (SELECT
                        ant_qna.hp_rfc, ant_qna.hp_qna_pago,
                        lpad(ant_qna.HP_FOLIO,10,'0') comprobante,
                        case when ant_qna.hp_num_pension != 0 then substr(ant_qna.hp_rfc,0,4)||'-'||
                            substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||td_pension.beneficiaria_pension 
                            else substr(ant_qna.hp_rfc,0,4)||'-'||substr(ant_qna.hp_rfc,5,6)||'-'||substr(ant_qna.hp_rfc,11,3)||'  '||
                            trim(trim(td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                        ant_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                        substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                        case when substr(ant_qna.hp_clabe,1,3) > '990' or substr(ant_qna.hp_clabe,1,3) = '000' 
                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                        lpad(ant_qna.id_plaza,6,'0') plaza,
                        tc_atributo_puesto.id_nivel_pto||'-'||ant_qna.id_rango_nom nivel_herramienta,
                        td_empleado.imss_issste,
                        ant_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                        case when ant_qna.hp_pcp_pagados != 0 and ant_qna.hp_pcp_por_pagar != 0 
                            then lpad(ant_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(ant_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                        ant_qna.id_unidad_nom||'-'||substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                            substr(lpad(ant_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                        lpad(ant_qna.hp_num_pension,2,'0') num_pension,
                        to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                        ant_qna.id_tipo_nomina||'-'||substr(ant_qna.hp_qna_pago,0,4)||'-'||substr(ant_qna.hp_qna_pago,5,2)||'-'||
                            ant_qna.hp_num_complem nomina,
                        case when ant_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                        ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                    FROM
                        tn_historico_pago ant_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto,
                        tc_sit_pago, tc_atributo_puesto, td_plaza, td_pension, tc_banco, tn_reg_control
                    WHERE 1 = 1 and
                        ##ant_qna.hp_qna_pago## and
                        ##ant_qna.id_tipo_nomina## and
                        ##ant_qna.id_grupopago_nom## and 
                        ##ant_qna.hp_num_complem## and
                        ant_qna.hp_num_pension = 0 and
                        ant_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                        ant_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                        ant_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                        tn_concepto_pagado.id_tipo_cpto != 'C'  and
                        ant_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                        ant_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                        tc_unidad.uni_ciclo = to_number(substr(ant_qna.hp_qna_pago,1,4)) and
                        ant_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                        ant_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                        ant_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                        tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                        ant_qna.id_plaza = td_plaza.id_plaza(+) and
                        ant_qna.hp_rfc = td_pension.rfc_pension(+) and
                        ant_qna.hp_num_pension = td_pension.num_pension(+) and
                        (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                        substr(ant_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                        ant_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                        ant_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                        ant_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                    group by ant_qna.hp_ini_pago, ant_qna.hp_fin_pago, imss_issste, ant_qna.hp_num_pension,
                             ant_qna.hp_rfc, td_pension.beneficiaria_pension, td_empleado.primer_apellido, td_empleado.segundo_apellido,
                             td_empleado.nombre_empleado, ant_qna.id_puesto_nom, tc_puesto.desc_puesto, td_empleado.curp_empleado,
                             ant_qna.hp_clabe, tc_banco.desc_bancos, ant_qna.id_plaza, tc_atributo_puesto.id_nivel_pto,
                             ant_qna.id_rango_nom, ant_qna.id_unidad_nom, tc_unidad.DESC_UNIDAD, ant_qna.hp_pcp_pagados,
                             ant_qna.hp_pcp_por_pagar, ant_qna.id_zona_dist_nom, tn_reg_control.rc_fec_pago,
                             ant_qna.id_tipo_nomina, ant_qna.hp_qna_pago, ant_qna.hp_num_complem,
                             ant_qna.id_sit_pago, ant_qna.hp_folio, ant_qna.hp_dif_folio, ant_qna.HP_NETO_PAGO
                    ) a join
                    (SELECT
                        act_qna.hp_rfc,act_qna.hp_qna_pago,lpad(act_qna.HP_FOLIO,10,'0') comprobante,
                        case when act_qna.hp_num_pension != 0 then substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||
                            substr(act_qna.hp_rfc,11,3)||'  '||td_pension.beneficiaria_pension 
                            else substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||
                            trim(trim(td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                        act_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                        substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                        case when substr(act_qna.hp_clabe,1,3) > '990' or substr(act_qna.hp_clabe,1,3) = '000' 
                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                        lpad(act_qna.id_plaza,6,'0') plaza,
                        tc_atributo_puesto.id_nivel_pto||'-'||act_qna.id_rango_nom nivel_herramienta,
                        td_empleado.imss_issste,
                        act_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                        case when act_qna.hp_pcp_pagados != 0 and act_qna.hp_pcp_por_pagar != 0 
                            then lpad(act_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(act_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                        act_qna.id_unidad_nom||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                            substr(lpad(act_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                        lpad(act_qna.hp_num_pension,2,'0') num_pension,
                        to_char(tn_reg_control.rc_fec_pago, 'dd MONTH yyyy') REGCONT_FEC_PAGO,
                        act_qna.id_tipo_nomina||'-'||substr(act_qna.hp_qna_pago,0,4)||'-'||substr(act_qna.hp_qna_pago,5,2)||'-'||
                            act_qna.hp_num_complem nomina,
                        case when act_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                        act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                    FROM
                        tn_historico_pago act_qna, tn_concepto_pagado, td_empleado, tc_tipo_nomina, tc_unidad, tc_puesto,
                        tc_sit_pago, tc_atributo_puesto, td_plaza, td_pension, tc_banco, tn_reg_control
                    WHERE 1 = 1 and
                        ##act_qna.hp_qna_pago## and
                        ##act_qna.id_tipo_nomina## and
                        ##act_qna.id_grupopago_nom## and 
                        ##act_qna.hp_num_complem## and
                        act_qna.hp_num_pension = 0 and
                        act_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                        act_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                        act_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                        tn_concepto_pagado.id_tipo_cpto != 'C'  and
                        act_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                        act_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                        tc_unidad.uni_ciclo = to_number(substr(act_qna.hp_qna_pago,1,4)) and
                        act_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                        act_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                        act_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                        tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                        act_qna.id_plaza = td_plaza.id_plaza(+) and
                        act_qna.hp_rfc = td_pension.rfc_pension(+) and
                        act_qna.hp_num_pension = td_pension.num_pension(+) and
                        (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                        substr(act_qna.hp_clabe,0,3) = tc_banco.id_banco(+) and
                        act_qna.hp_qna_pago = tn_reg_control.rc_qna_captura and
                        act_qna.hp_num_complem = tn_reg_control.rc_num_complemento and
                        act_qna.id_tipo_nomina = tn_reg_control.rc_cve_tipo_nom
                    group by act_qna.hp_ini_pago, act_qna.hp_fin_pago, imss_issste, act_qna.hp_num_pension,
                             act_qna.hp_rfc, td_pension.beneficiaria_pension, td_empleado.primer_apellido, td_empleado.segundo_apellido,
                             td_empleado.nombre_empleado, act_qna.id_puesto_nom, tc_puesto.desc_puesto, td_empleado.curp_empleado,
                             act_qna.hp_clabe, tc_banco.desc_bancos, act_qna.id_plaza, tc_atributo_puesto.id_nivel_pto,
                             act_qna.id_rango_nom, act_qna.id_unidad_nom, tc_unidad.DESC_UNIDAD, act_qna.hp_pcp_pagados,
                             act_qna.hp_pcp_por_pagar, act_qna.id_zona_dist_nom, tn_reg_control.rc_fec_pago,
                             act_qna.id_tipo_nomina, act_qna.hp_qna_pago, act_qna.hp_num_complem,
                             act_qna.id_sit_pago, act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO
                    ) b on a.hp_rfc=b.hp_rfc 
                    where (nvl(a.empleado, ' ')!=nvl(b.empleado, ' ') 
                            OR nvl(a.puesto_funcional, ' ')!=nvl(b.puesto_funcional, ' ') 
                            OR nvl(a.curp, ' ')!=nvl(b.curp, ' ') 
                            OR nvl(a.cve_banco, ' ')!=nvl(b.cve_banco, ' ') 
                            OR nvl(a.plaza, ' ')!=nvl(b.plaza, ' ') 
                            OR nvl(a.nivel_herramienta, ' ')!=nvl(b.nivel_herramienta, ' ') 
                            OR nvl(a.imss_issste, ' ')!=nvl(b.imss_issste, ' ') 
                            OR nvl(a.unidad_fisica, ' ')!=nvl(b.unidad_fisica, ' ')  
                            OR nvl(a.zona_pagadora, ' ')!=nvl(b.zona_pagadora, ' ') 
                            OR nvl(a.num_pension, ' ')!=nvl(b.num_pension, ' ')  
                            OR nvl(a.leyenda_cancelado, ' ')!=nvl(b.leyenda_cancelado, ' ') )
                </prop>
                <!--Fin procedimientos para cambios en datos generales en QNAS -->
                <!--  Procedimiento para sacar empleados con neto negativo en QNA -->
                <prop key="listaImpNegativos">				
                    SELECT 
                        hp_qna_pago quincena,
                        comprobante comprobante,
                        empleado empleado,
                        puesto_funcional puestoFuncional,
                        curp curp,
                        cve_banco cveBanco,
                        plaza plaza,
                        nivel_herramienta nivelHerramienta,
                        imss_issste imssIssste, 
                        unidad_fisica unidadFisica,
                        pcp pcp,
                        zona_pagadora zonaPagadora,
                        num_pension numPension,
                        nomina nomina,
                        leyenda_cancelado leyendaCancelado,
                        hp_folio hpFolio,
                        hp_dif_folio hpDifFolio,
                        hp_neto_pago hpNetoPago,
                        deducciones deducciones,
                        percepciones percepciones
                    FROM
                    (SELECT
                        act_qna.hp_rfc,
                        act_qna.hp_qna_pago,
                        lpad(act_qna.HP_FOLIO,10,'0') comprobante,
                        case when act_qna.hp_num_pension != 0 then substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||
                            substr(act_qna.hp_rfc,11,3)||'  '||td_pension.beneficiaria_pension 
                            else substr(act_qna.hp_rfc,0,4)||'-'||substr(act_qna.hp_rfc,5,6)||'-'||substr(act_qna.hp_rfc,11,3)||'  '||
                            trim(trim(td_empleado.primer_apellido)||' ' ||trim(td_empleado.segundo_apellido))||' '||trim(td_empleado.nombre_empleado) end empleado,
                        act_qna.id_puesto_nom||' '|| tc_puesto.desc_puesto puesto_funcional,
                        substr(td_empleado.curp_empleado,0,4)||'-'||substr(td_empleado.curp_empleado,5,6)||'-'||substr(td_empleado.curp_empleado,11,8) curp,
                        case when substr(act_qna.hp_clabe,1,3) > '990' or substr(act_qna.hp_clabe,1,3) = '000' 
                            then tc_banco.desc_bancos else 'Cta. '||tc_banco.desc_bancos end cve_banco,
                        lpad(act_qna.id_plaza,6,'0') plaza,
                        tc_atributo_puesto.id_nivel_pto||'-'||act_qna.id_rango_nom nivel_herramienta,
                        td_empleado.imss_issste,
                        act_qna.id_unidad_nom||' '||tc_unidad.DESC_UNIDAD unidad_fisica,
                        case when act_qna.hp_pcp_pagados != 0 and act_qna.hp_pcp_por_pagar != 0 
                            then lpad(act_qna.hp_pcp_pagados,3,'0')|| ' de ' || lpad(act_qna.hp_pcp_por_pagar,3,'0') else '' end pcp,
                        act_qna.id_unidad_nom||'-'||substr(lpad(act_qna.id_zona_dist_nom,5,'0'),0,2)||'-'||
                            substr(lpad(act_qna.id_zona_dist_nom,5,'0'),3,3) zona_pagadora,
                        lpad(act_qna.hp_num_pension,2,'0') num_pension,
                        act_qna.id_tipo_nomina||'-'||substr(act_qna.hp_qna_pago,0,4)||'-'||substr(act_qna.hp_qna_pago,5,2)||'-'||
                            act_qna.hp_num_complem ||'-'||act_qna.id_grupopago_nom nomina,
                        case when act_qna.id_sit_pago = 'C' then 'C A N C E L A D O'  end leyenda_cancelado,
                        act_qna.hp_folio, act_qna.hp_dif_folio, act_qna.HP_NETO_PAGO,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'D',cp_monto,0)) as deducciones,
                        sum(decode(tn_concepto_pagado.id_tipo_cpto,'P',cp_monto,0)) as percepciones
                    FROM
                        tn_historico_pago act_qna, 
                        tn_concepto_pagado, 
                        td_empleado, 
                        tc_tipo_nomina, 
                        tc_unidad, 
                        tc_puesto,
                        tc_sit_pago, 
                        tc_atributo_puesto, 
                        td_plaza, 
                        td_pension, 
                        tc_banco 
                    WHERE 1 = 1 and
                        act_qna.hp_neto_pago <![CDATA[<]]> 0 and
                        ##act_qna.hp_qna_pago## and
                        ##act_qna.id_tipo_nomina## and
                        ##act_qna.id_grupopago_nom## and 
                        ##act_qna.hp_num_complem## and
                        act_qna.hp_num_pension = 0 and
                        act_qna.hp_rfc= td_empleado.rfc_empleado(+) and
                        act_qna.HP_FOLIO = tn_concepto_pagado.cp_folio and
                        act_qna.hp_dif_folio = tn_concepto_pagado.cp_dif_folio and
                        tn_concepto_pagado.id_tipo_cpto != 'C'  and
                        act_qna.id_tipo_nomina = tc_tipo_nomina.id_tipo_nomina(+) and
                        act_qna.id_unidad_nom = tc_unidad.id_unidad(+) and
                        tc_unidad.uni_ciclo = to_number(substr(act_qna.hp_qna_pago,1,4)) and
                        act_qna.id_puesto_nom = tc_puesto.id_puesto(+) and
                        act_qna.id_sit_pago = tc_sit_pago.id_sit_pago(+) and
                        act_qna.id_puesto_nom = tc_atributo_puesto.id_atributo_puesto(+) and
                        tc_atributo_puesto.ap_fin = TO_DATE('01/01/2099','DD/MM/YYYY') and
                        act_qna.id_plaza = td_plaza.id_plaza(+) and
                        act_qna.hp_rfc = td_pension.rfc_pension(+) and
                        act_qna.hp_num_pension = td_pension.num_pension(+) and
                        (td_pension.status_pension = 'V' or td_pension.status_pension is null) and
                        substr(act_qna.hp_clabe,0,3) = tc_banco.id_banco(+)
                    group by act_qna.hp_ini_pago, 
                            act_qna.hp_fin_pago, 
                            imss_issste, 
                            act_qna.hp_num_pension,
                            act_qna.hp_rfc, 
                            td_pension.beneficiaria_pension, 
                            td_empleado.primer_apellido, 
                            td_empleado.segundo_apellido,
                            td_empleado.nombre_empleado, 
                            act_qna.id_puesto_nom, 
                            tc_puesto.desc_puesto, 
                            td_empleado.curp_empleado,
                            act_qna.hp_clabe, 
                            tc_banco.desc_bancos, 
                            act_qna.id_plaza, 
                            tc_atributo_puesto.id_nivel_pto,
                            act_qna.id_rango_nom, 
                            act_qna.id_unidad_nom, 
                            tc_unidad.DESC_UNIDAD, 
                            act_qna.hp_pcp_pagados,
                            act_qna.hp_pcp_por_pagar, 
                            act_qna.id_zona_dist_nom, 
                            act_qna.id_tipo_nomina, 
                            act_qna.hp_qna_pago, 
                            act_qna.hp_num_complem,
                            act_qna.id_grupopago_nom,
                            act_qna.id_sit_pago, 
                            act_qna.hp_folio, 
                            act_qna.hp_dif_folio, 
                            act_qna.HP_NETO_PAGO)
                </prop>
                <!-- Fin procedimiento para sacar empleados con neto negativo en QNA     -->
                
                <prop key="extraeConsecutivosNominaQnasHistorico">
                    SELECT  A.HP_CONSEC_NOMINA,
                            D.DESC_TIPO_NOMINA || ' Consecutivo: ' ||  NVL(A.HP_CONSEC_NOMINA,0) || ' Complemento: ' || A.HP_NUM_COMPLEM || ' Grupo de pago: ' || A.ID_GRUPOPAGO_NOM ||'-'|| B.DESC_GRUPO_PAGO AS TIPO_NOMINA
                      FROM  TN_HISTORICO_PAGO A, TC_GRUPO_PAGO B, TC_TIPO_NOMINA D
                     WHERE   1 = 1 
                            and A.HP_QNA_PAGO = ?
                            AND A.HP_CONSEC_NOMINA > 0                                                  
                            AND A.ID_TIPO_NOMINA   = D.ID_TIPO_NOMINA(+)
                            AND A.ID_GRUPOPAGO_NOM = B.ID_GRUPO_PAGO(+)

                  GROUP BY  A.HP_QNA_PAGO, D.DESC_TIPO_NOMINA, A.HP_CONSEC_NOMINA, A.HP_NUM_COMPLEM, A.ID_GRUPOPAGO_NOM, B.DESC_GRUPO_PAGO

                  ORDER BY  A.HP_CONSEC_NOMINA
                </prop>
                
                <prop key="sumaConsecutivosNominaQnasHistoricoCancel">
                    SELECT  COUNT(*)                                       AS REGISTROS,
                            TN_CAPTURA_PAGO_CANC.CPC_QNA_CAPTURA           AS QNA_PAGO, 
                            D.DESC_TIPO_NOMINA                             AS TIPO_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS CONSEC_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS SELECCION_CONSEC_NOMINA,
                            TN_HISTORICO_PAGO.HP_NUM_COMPLEM        AS NUM_COMPLEM,
                            TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM ||'-'|| B.DESC_GRUPO_PAGO AS GPO_PAGO, 
                            to_char(SUM (C.CP_MONTO),'$99,999,999,999.00') AS MONTO
                      FROM  TN_CAPTURA_PAGO_CANC, TN_HISTORICO_PAGO, TC_GRUPO_PAGO B, TN_CONCEPTO_PAGADO C, TC_TIPO_NOMINA D
                     WHERE      ##TN_CAPTURA_PAGO_CANC.CPC_QNA_APLICA##
                            AND ##TN_CAPTURA_PAGO_CANC.CPC_QNA_APLICA##
                            AND TN_CAPTURA_PAGO_CANC.CPC_FOLIO     = TN_HISTORICO_PAGO.HP_FOLIO
                            AND TN_CAPTURA_PAGO_CANC.CPC_DIF_FOLIO = TN_HISTORICO_PAGO.HP_DIF_FOLIO                            
                            AND TN_HISTORICO_PAGO.HP_CONSEC_NOMINA > 0                                                  
                            AND TN_HISTORICO_PAGO.ID_TIPO_NOMINA   = D.ID_TIPO_NOMINA(+)
                            AND TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM = B.ID_GRUPO_PAGO(+)
                            AND TN_HISTORICO_PAGO.HP_FOLIO         = C.CP_FOLIO
                            AND TN_HISTORICO_PAGO.HP_DIF_FOLIO     = C.CP_DIF_FOLIO
                            AND ##C.ID_TIPO_CPTO##
                            AND C.ID_CPTO_PAGO     IN (SELECT TRIM(REGEXP_SUBSTR(DAT_CONCEPTO,'[^,]+', 1, LEVEL)) DAT_CONCEPTO FROM (SELECT DAT_CONCEPTO FROM TC_GENERA_ARCHIVO_TERCEROS 
                            WHERE 1=1 AND ##ID_TERCERO## AND ##DAT_TIPO_CPTO## AND ##DAT_CONCEPTO## AND DAT_SECUENCIA=0) CONNECT BY REGEXP_SUBSTR(DAT_CONCEPTO, '[^,]+', 1, LEVEL) IS NOT NULL)
                            AND C.CP_MONTO != 0
                  GROUP BY  TN_HISTORICO_PAGO.HP_QNA_PAGO, TN_CAPTURA_PAGO_CANC.CPC_QNA_CAPTURA, D.DESC_TIPO_NOMINA, TN_HISTORICO_PAGO.HP_CONSEC_NOMINA, TN_HISTORICO_PAGO.HP_NUM_COMPLEM, TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM, B.DESC_GRUPO_PAGO
                  ORDER BY  TN_HISTORICO_PAGO.HP_QNA_PAGO, TN_HISTORICO_PAGO.HP_CONSEC_NOMINA                            
                </prop>

                <prop key="sumaConsecutivosNominaQnasHistorico">
                    SELECT  COUNT(*)                                       AS REGISTROS,
                            TN_HISTORICO_PAGO.HP_QNA_PAGO                  AS QNA_PAGO, 
                            D.DESC_TIPO_NOMINA                             AS TIPO_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS CONSEC_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS SELECCION_CONSEC_NOMINA,
                            TN_HISTORICO_PAGO.HP_NUM_COMPLEM        AS NUM_COMPLEM,
                            TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM ||'-'|| B.DESC_GRUPO_PAGO AS GPO_PAGO, 
                            to_char(SUM (C.CP_MONTO),'$99,999,999,999.00') AS MONTO
                      FROM  TN_HISTORICO_PAGO, TC_GRUPO_PAGO B, TN_CONCEPTO_PAGADO C, TC_TIPO_NOMINA D
                     WHERE      ##TN_HISTORICO_PAGO.HP_QNA_PAGO##
                            AND ##TN_HISTORICO_PAGO.HP_QNA_PAGO##
                            AND TN_HISTORICO_PAGO.HP_CONSEC_NOMINA > 0                                                  
                            AND TN_HISTORICO_PAGO.ID_TIPO_NOMINA   = D.ID_TIPO_NOMINA(+)
                            AND TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM = B.ID_GRUPO_PAGO(+)
                            AND TN_HISTORICO_PAGO.HP_FOLIO         = C.CP_FOLIO
                            AND TN_HISTORICO_PAGO.HP_DIF_FOLIO     = C.CP_DIF_FOLIO                            
                            AND ##C.ID_TIPO_CPTO##
                            AND C.ID_CPTO_PAGO     IN (SELECT TRIM(REGEXP_SUBSTR(DAT_CONCEPTO,'[^,]+', 1, LEVEL)) DAT_CONCEPTO FROM (SELECT DAT_CONCEPTO FROM TC_GENERA_ARCHIVO_TERCEROS 
                            WHERE 1=1 AND ##ID_TERCERO## AND ##DAT_TIPO_CPTO## AND ##DAT_CONCEPTO## AND DAT_SECUENCIA=0) CONNECT BY REGEXP_SUBSTR(DAT_CONCEPTO, '[^,]+', 1, LEVEL) IS NOT NULL)
                            AND C.CP_MONTO != 0
                  GROUP BY  TN_HISTORICO_PAGO.HP_QNA_PAGO, D.DESC_TIPO_NOMINA, TN_HISTORICO_PAGO.HP_CONSEC_NOMINA, TN_HISTORICO_PAGO.HP_NUM_COMPLEM, TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM, B.DESC_GRUPO_PAGO
                  ORDER BY  TN_HISTORICO_PAGO.HP_QNA_PAGO, TN_HISTORICO_PAGO.HP_CONSEC_NOMINA                            
                </prop>
                
                <prop key="sumaConsecutivosNominaQnasMovtos">                
                SELECT      COUNT(*)                                AS REGISTROS,
                            TN_MOVTOS_EMP_PLA.MEP_QNA_CAPTURA       AS QNA_PAGO, 
                            TC_TIPO_NOMINA.DESC_TIPO_NOMINA         AS TIPO_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS CONSEC_NOMINA,
                            NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0)      AS SELECCION_CONSEC_NOMINA,
                            TN_HISTORICO_PAGO.HP_NUM_COMPLEM        AS NUM_COMPLEM,
                            TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM ||'-'|| TC_GRUPO_PAGO.DESC_GRUPO_PAGO AS GPO_PAGO,
                            to_char(COUNT(*),'999,999') AS MONTO

                    FROM    TN_HISTORICO_PAGO, TC_TIPO_NOMINA, TC_GRUPO_PAGO, TN_CONCEPTO_PAGADO, TN_CONCEPTO_PAGADO SUELDO, TN_CONCEPTO_PAGADO COMPENSACION, TN_MOVTOS_EMP_PLA, TD_EMPLEADO

                   WHERE        ##TN_HISTORICO_PAGO.HP_QNA_PAGO##
                            AND ##TN_HISTORICO_PAGO.HP_QNA_PAGO##
                            AND ##TN_HISTORICO_PAGO.ID_SIT_PAGO##
                            AND ##TN_MOVTOS_EMP_PLA.ID_MOVTO_PERSONA##
                            AND TN_HISTORICO_PAGO.HP_CONSEC_NOMINA > 0                                                  
                            AND TN_MOVTOS_EMP_PLA.MEP_QNA_CAPTURA  = TN_HISTORICO_PAGO.HP_QNA_PAGO 
                            AND (TN_MOVTOS_EMP_PLA.MEP_INI_CONT    = TN_HISTORICO_PAGO.HP_INI_PAGO OR TN_MOVTOS_EMP_PLA.MEP_INI_CONT    = TN_HISTORICO_PAGO.HP_FIN_PAGO)
                            AND TN_MOVTOS_EMP_PLA.MEP_RFC          = TN_HISTORICO_PAGO.HP_RFC
                            AND TN_MOVTOS_EMP_PLA.MEP_RFC          = TD_EMPLEADO.RFC_EMPLEADO
                            AND TN_HISTORICO_PAGO.ID_TIPO_NOMINA   = 'OR'
                            AND TN_HISTORICO_PAGO.ID_TIPO_NOMINA   = TC_TIPO_NOMINA.ID_TIPO_NOMINA(+)
                            AND TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM = TC_GRUPO_PAGO.ID_GRUPO_PAGO(+)
                            AND NVL(TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,0) >= 0
                            AND TN_HISTORICO_PAGO.HP_FOLIO = TN_CONCEPTO_PAGADO.CP_FOLIO 
                            AND TN_CONCEPTO_PAGADO.ID_TIPO_CPTO = 'D'
                            AND TN_CONCEPTO_PAGADO.ID_CPTO_PAGO = '0A'
                            AND TN_HISTORICO_PAGO.HP_FOLIO = SUELDO.CP_FOLIO(+)       AND SUELDO.ID_TIPO_CPTO(+) = 'P'       AND SUELDO.ID_CPTO_PAGO(+) IN ('07', '02')
                            AND TN_HISTORICO_PAGO.HP_FOLIO = COMPENSACION.CP_FOLIO(+) AND COMPENSACION.ID_TIPO_CPTO(+) = 'P' AND COMPENSACION.ID_CPTO_PAGO(+) = '06'
                 GROUP BY   TN_MOVTOS_EMP_PLA.MEP_QNA_CAPTURA, 
                            TC_TIPO_NOMINA.DESC_TIPO_NOMINA,
                            TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,
                            TN_HISTORICO_PAGO.HP_CONSEC_NOMINA,
                            TN_HISTORICO_PAGO.HP_NUM_COMPLEM,
                            TN_HISTORICO_PAGO.ID_GRUPOPAGO_NOM, TC_GRUPO_PAGO.DESC_GRUPO_PAGO
                  ORDER BY  TN_HISTORICO_PAGO.HP_QNA_PAGO, TN_HISTORICO_PAGO.HP_CONSEC_NOMINA                            
                </prop>
                
                <prop key="listaSoloQnasHistorico">
                    SELECT HP_QNA_PAGO, HP_QNA_PAGO AS LLAVE
                      FROM TN_HISTORICO_PAGO
                    GROUP BY HP_QNA_PAGO
                     ORDER BY HP_QNA_PAGO DESC
                </prop>
                <prop key="listaSoloQnasHistoricoFinal">
                    SELECT HP_QNA_PAGO, HP_QNA_PAGO AS HPQNAPAGOS
                      FROM TN_HISTORICO_PAGO
                     WHERE HP_QNA_PAGO <![CDATA[>=]]>  200
                    GROUP BY HP_QNA_PAGO
                     ORDER BY HP_QNA_PAGO DESC
                </prop>
                <prop key="catalogoGenArchTerceros">            
                   SELECT A.ID_TERCERO||'°'||B.DESC_TERCERO||'°'||A.DAT_TIPO_CPTO||'°'||A.DAT_CONCEPTO AS LLAVE_TERCERO,
                          A.ID_TERCERO||'-'||B.DESC_TERCERO||'    CONCEPTO(S): '||A.DAT_TIPO_CPTO||'-'||A.DAT_CONCEPTO AS DESCRIPCION_TERCERO 
                     FROM TC_GENERA_ARCHIVO_TERCEROS A, TC_TERCERO B
                    WHERE A.ID_TERCERO = B.ID_TERCERO AND A.DAT_SECUENCIA = 0

                </prop>
                <prop key="pensionByRfcAndStatus">
                SELECT p.id_pension, p.rfc_pension, p.num_pension, p.status_pension,
                       p.id_zona_dist, p.beneficiaria_pension, p.monto_pension,
                       p.porcentaje_pension, p.clabe_pension, p.referencia_pension,
                       p.qna_captura_pension, p.ref_adeudo_pension, p.qna_captura_adeudo,
                       p.monto_adeudo, p.qna_desc_adeudo, p.qna_aplica_adeudo,
                       p.ult_qna_procesa_adeudo, p.cptos_porcentaje, p.usuario,
                       p.fec_modifico
                  FROM td_empleado e, td_pension p, td_plaza pl
                 WHERE e.rfc_empleado = p.rfc_pension
                   AND pl.plaza_rfc = e.rfc_empleado
                </prop>
                <!--prop key="sattimbradoGrid">
                    SELECT DISTINCT h.id_grupopago_nom,
                                    h.id_grupopago_nom || ' - ' || g.desc_grupo_pago gpopago,
                                    h.hp_qna_pago qnapago, 
                                    h.hp_num_complem numcomplem,
                                    h.hp_consec_nomina consecnomina,
                                    t.desc_tipo_nomina tiponomina,
                                    h.hp_consec_nomina seleccionConsecNomina, 
                                    h.hp_qna_pago,
                                    h.id_tipo_nomina,
                                    TO_CHAR (h.hp_ini_pago, 'dd/MM/yyyy') hp_ini_pago
                               FROM tn_historico_pago h,
                                    tn_concepto_pagado c,
                                    td_empleado e,
                                    tc_atributo_puesto a,
                                    tc_tipo_nomina t,
                                    tc_grupo_pago g
                              WHERE h.hp_num_pension = 0
                                AND h.hp_folio = c.cp_folio
                                AND h.hp_dif_folio = c.cp_dif_folio
                                AND h.id_puesto_nom = a.id_atributo_puesto
                                AND TO_CHAR (a.ap_fin, 'dd/mm/yyyy') = '01/01/2099'
                                AND h.hp_rfc = e.rfc_empleado
                                AND h.id_tipo_nomina = t.id_tipo_nomina
                                AND h.id_grupopago_nom = g.id_grupo_pago
                                AND e.compat_empleo <![CDATA[<>]]> 'S'
                                AND ##h.hp_qna_pago##
                                ORDER BY 6 ASC
                </prop-->
                <prop key="ciclotdfonac">
                    select fon_ciclo, fon_ciclo as Ciclo
                    from td_fonac
                    where fon_ciclo > 2000
                    group by fon_ciclo
                    order  by fon_ciclo desc
                </prop>
                <prop key="fonacotMes">
                    SELECT  distinct TO_CHAR(FONACOT_MES, '00') ID, TO_CHAR(FONACOT_MES, '00') DES
                    FROM    TN_DESCUENTOS_FONACOT
                            order by 1
                </prop>
                <prop key="fonacotCiclo">
                    SELECT  distinct FONACOT_CICLO ID, FONACOT_CICLO DES
                    FROM    TN_DESCUENTOS_FONACOT 
                            ORDER BY ID DESC
                </prop>
                <prop key="descBancos">
                    SELECT  b.ID_BANCO ID, b.ID_BANCO || ' - ' || b.DESC_BANCOS DB
                    FROM    TC_BANCO b       
                            ORDER BY DB
                </prop>
                <prop key="quincenasByRange">
                    SELECT (CASE WHEN n <![CDATA[<=]]> 9 THEN anio || '0' || n ELSE anio || n
                        END) ID, (CASE WHEN n <![CDATA[<=]]> 9 THEN anio || '0' || n ELSE anio || n END) quincena
                        FROM (SELECT SUBSTR (rc_qna_captura, 0, 4) anio
                        FROM tn_reg_control WHERE rc_vigente = 'S'),
                        (SELECT     ROWNUM n FROM DUAL
                        CONNECT BY LEVEL <![CDATA[<=]]> 24)
                    WHERE ##n##
                    AND ##n##
                </prop>
                <prop key="cicloRegControl">
                    SELECT  distinct SUBSTR(RC_QNA_CAPTURA,0,4) di, SUBSTR(RC_QNA_CAPTURA,0,4) ciclo
                    FROM    tn_reg_control
                            order by ciclo desc
                </prop>
                <prop key="cicloRegControlConsta">
                    SELECT  distinct RC_EJERCICIO di, RC_EJERCICIO ciclo
                    FROM    td_reporte_constancia
                            order by ciclo desc
                </prop>
                <prop key="cicloRegControl_bis">
                    SELECT distinct SUBSTR(max (RC_QNA_CAPTURA), 0, 4) + 1 id, SUBSTR(max (RC_QNA_CAPTURA), 0, 4) + 1 ciclo 
                    FROM   tn_reg_control
                    union
                    SELECT distinct SUBSTR(max (RC_QNA_CAPTURA), 0, 4) + 0 id, SUBSTR(max (RC_QNA_CAPTURA), 0, 4) + 0 ciclo
                    FROM   tn_reg_control
                   order by id desc
                </prop>
                <prop key="cicloActualRegControl">
                    SELECT  SUBSTR(RC_QNA_CAPTURA,0,4) di, SUBSTR(RC_QNA_CAPTURA,0,4) ciclo
                    FROM    tn_reg_control
                    group by SUBSTR(RC_QNA_CAPTURA,0,4)
                    order by 1 desc
                </prop>
                <prop key="bimestresAnio">
                    SELECT  TO_CHAR(ROWNUM, '00') id, TO_CHAR(ROWNUM, '00') bim
                    FROM    DUAL 
                    CONNECT BY LEVEL <![CDATA[<=]]> 6
                </prop>
                <prop key="incidenciasQQ">
                    SELECT   h.id_grupopago_nom,
                         h.id_grupopago_nom || ' - ' || g.desc_grupo_pago gpopago,
                         h.hp_qna_pago qnapago, h.hp_num_complem numcomplem,
                         h.hp_consec_nomina consecnomina, t.desc_tipo_nomina tiponomina,
                         h.hp_consec_nomina seleccionconsecnomina, h.hp_qna_pago,
                         h.id_tipo_nomina,
                         MAX (TO_CHAR (h.hp_ini_pago, 'dd/MM/yyyy')) hp_ini_pago
                           FROM tn_historico_pago h,
                                td_empleado e,
                                tc_atributo_puesto a,
                                tn_nomina n,
                                tc_grupo_pago g,
                                tc_tipo_nomina t
                          WHERE h.hp_num_pension = 0
                            AND h.id_tipo_nomina = 'SA'
                            AND h.hp_rfc = e.rfc_empleado
                            AND h.id_puesto_nom = a.id_atributo_puesto
                            AND TO_CHAR (a.ap_fin, 'dd/mm/yyyy') = '01/01/2099'
                            AND h.hp_consec_nomina = n.id_nomina
                            AND h.hp_qna_pago = n.nom_qna_captura
                            AND h.hp_num_complem = n.nom_num_complem
                            AND h.id_tipo_nomina = n.id_tipo_nomina
                            AND h.id_grupopago_nom = g.id_grupo_pago
                            AND h.id_tipo_nomina = t.id_tipo_nomina
                            AND ##h.hp_qna_pago##
                            AND h.id_grupopago_nom IN ('E','V')
                            GROUP BY h.id_grupopago_nom,
                             h.id_grupopago_nom || ' - ' || g.desc_grupo_pago,
                             h.hp_qna_pago,
                             h.hp_num_complem,
                             h.hp_consec_nomina,
                             t.desc_tipo_nomina,
                             h.hp_consec_nomina,
                             h.hp_qna_pago,
                             h.id_tipo_nomina
                       ORDER BY h.id_grupopago_nom, h.hp_num_complem
                </prop>
                
                <prop key= "resumenSar">
                
                SELECT   h.id_grupopago_nom,
                         h.id_grupopago_nom || ' - ' || g.desc_grupo_pago gpopago,
                         h.hp_qna_pago qnapago, h.hp_num_complem numcomplem,
                         h.hp_consec_nomina consecnomina, t.desc_tipo_nomina tiponomina,
                         h.hp_consec_nomina seleccionconsecnomina, h.hp_qna_pago,
                         h.id_tipo_nomina,
                         MAX (TO_CHAR (h.hp_ini_pago, 'dd/MM/yyyy')) hp_ini_pago
                           FROM tn_historico_pago h,
                                td_empleado e,
                                tc_atributo_puesto a,
                                tn_nomina n,
                                tc_grupo_pago g,
                                tc_tipo_nomina t
                          WHERE h.hp_folio in (select cp_folio from tn_concepto_pagado where h.hp_dif_folio = cp_dif_folio and id_tipo_cpto = 'D' and id_cpto_pago = '0D')
                            AND n.id_edo_nom = 'C'
                            AND h.hp_num_pension = 0
                            AND h.hp_rfc = e.rfc_empleado
                            AND h.id_puesto_nom = a.id_atributo_puesto
                            AND TO_CHAR (a.ap_fin, 'dd/mm/yyyy') = '01/01/2099'
                            AND h.hp_consec_nomina = n.id_nomina
                            AND h.hp_qna_pago = n.nom_qna_captura
                            AND h.hp_num_complem = n.nom_num_complem
                            AND h.id_tipo_nomina = n.id_tipo_nomina
                            AND h.id_grupopago_nom = g.id_grupo_pago
                            AND h.id_tipo_nomina = t.id_tipo_nomina
                            AND ##h.hp_qna_pago##
                            AND ##h.hp_qna_pago##
                            GROUP BY h.id_grupopago_nom,
                             h.id_grupopago_nom || ' - ' || g.desc_grupo_pago,
                             h.hp_qna_pago,
                             h.hp_num_complem,
                             h.hp_consec_nomina,
                             t.desc_tipo_nomina,
                             h.hp_consec_nomina,
                             h.hp_qna_pago,
                             h.id_tipo_nomina
                       ORDER BY consecnomina, h.id_grupopago_nom, h.hp_num_complem
                </prop>
                <prop key="aportacionesFonacQna">
                        SELECT   h.id_grupopago_nom,
                         h.id_grupopago_nom || ' - ' || g.desc_grupo_pago gpopago,
                         h.hp_qna_pago qnapago, h.hp_num_complem numcomplem,
                         h.hp_consec_nomina consecnomina, t.desc_tipo_nomina tiponomina,
                         h.hp_consec_nomina seleccionconsecnomina, h.hp_qna_pago,
                         h.id_tipo_nomina,
                         MAX (TO_CHAR (h.hp_ini_pago, 'dd/MM/yyyy')) hp_ini_pago
                           FROM tn_historico_pago h,
                                tn_concepto_pagado c,
                                td_empleado e,
                                tc_atributo_puesto a,
                                tn_nomina n,
                                tc_grupo_pago g,
                                tc_tipo_nomina t
                          WHERE h.hp_num_pension = 0
                            AND h.hp_rfc = e.rfc_empleado
                            AND h.id_puesto_nom = a.id_atributo_puesto
                            AND TO_CHAR (a.ap_fin, 'dd/mm/yyyy') = '01/01/2099'
                            AND h.hp_folio = c.cp_folio
                            AND h.hp_dif_folio = c.cp_dif_folio
                            AND c.id_tipo_cpto = 'D'
                            AND c.id_cpto_pago in ('21','FE')
                            AND h.hp_consec_nomina = n.id_nomina
                            AND h.hp_qna_pago = n.nom_qna_captura
                            AND h.hp_num_complem = n.nom_num_complem
                            AND h.id_tipo_nomina = n.id_tipo_nomina
                            AND h.id_grupopago_nom = g.id_grupo_pago
                            AND h.id_tipo_nomina = t.id_tipo_nomina
                            AND ##h.hp_qna_pago##
                            GROUP BY h.id_grupopago_nom,
                             h.id_grupopago_nom || ' - ' || g.desc_grupo_pago,
                             h.hp_qna_pago,
                             h.hp_num_complem,
                             h.hp_consec_nomina,
                             t.desc_tipo_nomina,
                             h.hp_consec_nomina,
                             h.hp_qna_pago,
                             h.id_tipo_nomina
                       ORDER BY h.id_grupopago_nom, h.hp_num_complem
                </prop>
                <prop key="nominaVales">
                    SELECT n.id_nomina as id, n.nom_qna_captura || ' - ' || n.desc_nomina as descripcion
                      FROM tn_nomina n
                     WHERE n.id_tipo_nomina = 'VA'
                     AND n.nom_cerrada = 'N'
                     AND n.id_edo_nom = 'N'
                     AND SUBSTR (TO_CHAR (n.nom_qna_captura), 0, 4) = ##anio##
                </prop>
                <prop key="gposPago">
                    SELECT  ID_GRUPO_PAGO id, ID_GRUPO_PAGO || ' - ' || DESC_GRUPO_PAGO descripcion
                    FROM    TC_GRUPO_PAGO
                            order by 1
                </prop>
                
                <!--REPOSRET - CLC Prestaciones trimestrales-->
                <!--<prop key="cicloUnidadPrestTrim">
                    select extract(year from sysdate) uniCiclo2,extract(year from sysdate) uniCiclo from dual
                    union select extract(year from sysdate)-1 uniCiclo2,extract(year from sysdate)-1 uniCiclo from dual
                    order by 1 desc
                </prop>-->
                <prop key="cicloUnidadPrestTrim">
                    SELECT (CICLO - LEVEL) +1 , (CICLO - LEVEL) +1 AS CICLO
                    FROM (SELECT SUBSTR(RC_QNA_CAPTURA,0,4) CICLO FROM TN_REG_CONTROL WHERE TN_REG_CONTROL.RC_VIGENTE = 'S'
                    ) CONNECT BY LEVEL <![CDATA[<]]> 3
                </prop>

                <prop key= "concentradoVales">
                SELECT   h.id_grupopago_nom,
                             h.id_grupopago_nom || ' - ' || g.desc_grupo_pago gpopago,
                             h.hp_qna_pago qnapago, h.hp_num_complem numcomplem,
                             h.hp_consec_nomina consecnomina, t.desc_tipo_nomina tiponomina,
                             h.hp_consec_nomina seleccionconsecnomina, h.hp_qna_pago,
                             h.id_tipo_nomina,
                             MAX (TO_CHAR (h.hp_ini_pago, 'dd/MM/yyyy')) hp_ini_pago
               FROM tn_historico_pago h,
                    td_empleado e,
                    tc_atributo_puesto a,
                    tn_nomina n,
                    tc_grupo_pago g,
                    tc_tipo_nomina t
                WHERE h.hp_folio in (select cp_folio from tn_concepto_pagado where h.hp_dif_folio = cp_dif_folio and id_tipo_cpto = 'P' and id_cpto_pago = 'VA')
                    AND h.hp_num_pension = 0
                    AND h.hp_rfc = e.rfc_empleado
                    AND h.id_puesto_nom = a.id_atributo_puesto
                    AND TO_CHAR (a.ap_fin, 'dd/mm/yyyy') = '01/01/2099'
                    AND h.hp_consec_nomina = n.id_nomina
                    AND h.hp_qna_pago = n.nom_qna_captura
                    AND h.hp_num_complem = n.nom_num_complem
                    AND h.id_tipo_nomina = n.id_tipo_nomina
                    AND h.id_grupopago_nom = g.id_grupo_pago
                    AND h.id_tipo_nomina = t.id_tipo_nomina
                    AND ##h.hp_qna_pago##
                    GROUP BY h.id_grupopago_nom,
                     h.id_grupopago_nom || ' - ' || g.desc_grupo_pago,
                     h.hp_qna_pago,
                     h.hp_num_complem,
                     h.hp_consec_nomina,
                     t.desc_tipo_nomina,
                     h.hp_consec_nomina,
                     h.hp_qna_pago,
                     h.id_tipo_nomina
                    ORDER BY h.id_grupopago_nom, h.hp_num_complem
                </prop>
                <prop key="listaNominasEjercicioAnual">
                    SELECT     H.HP_CONSEC_NOMINA as idGrupo,
                               H.HP_CONSEC_NOMINA as idQna,
                               H.HP_QNA_PAGO as qnaCaptura,
                               H.HP_NUM_COMPLEM as numComplem, 
                               NVL(N.DESC_NOMINA,'...') as descripcion, 
                               NVL(T.DESC_TIPO_NOMINA, '...') as tipoNomina, 
                               G.DESC_GRUPO_PAGO as grupoPago,
                               N.ID_EDO_NOM AS estadoNomina,
                               E.DESCRIBE_EDO_NOM as descEstadoNom,
                               TO_CHAR(N.NOM_FEC_CREACION, 'DD/MM/YYYY') as fcreacion, 
                               TO_CHAR(N.NOM_FEC_ANEXO20, 'DD/MM/YYYY') as fanexo, 
                               TO_CHAR(N.NOM_FEC_TIMBRADO, 'DD/MM/YYYY') as ftimbrado,
                               N.NOM_REF_TIMBRADO as reftimbrado, 
                               TO_CHAR(N.NOM_FEC_CANC_SIREH, 'DD/MM/YYYY') as fcancelacionsireh, 
                               TO_CHAR(N.NOM_FEC_CANC_SAT, 'DD/MM/YYYY') as fcansat,
                               N.NOM_REF_SAT as refsat,
                               COUNT(DISTINCT H.HP_FOLIO) as folio1,
                               COUNT(DISTINCT (CASE WHEN(H.HP_NUM_PENSION = 0) THEN H.HP_FOLIO END)) as folio2,
                               COUNT(DISTINCT (CASE WHEN(H.HP_NUM_PENSION >= 1) THEN H.HP_FOLIO END)) as folio3,
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'P') THEN C.CP_MONTO END),0) as tcpmonto, 
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'D') THEN C.CP_MONTO END),0) as tcdmonto,
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'P' AND CP.CP_TIENE_ISR = 'G') THEN C.CP_MONTO END),0) as tcpisrgmonto,
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'P' AND CP.CP_TIENE_ISR = 'E') THEN C.CP_MONTO END),0) as tcpisremonto,
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'D' AND CP.CP_TIENE_ISR = 'G') THEN C.CP_MONTO END),0) as tcdisrgmonto,
                               NVL(SUM(CASE WHEN(C.ID_TIPO_CPTO = 'D' AND CP.CP_TIENE_ISR = 'E') THEN C.CP_MONTO END),0) as tcdisremonto
                    FROM       TN_HISTORICO_PAGO H, TN_CONCEPTO_PAGADO C, TN_NOMINA N, TC_TIPO_NOMINA T, TC_GRUPO_PAGO G, TC_ESTADO_NOMINA E, TC_CONCEPTO_PAGO CP
                    WHERE     H.ID_TIPO_NOMINA NOT IN ('SA','FO')
                              AND H.HP_QNA_PAGO = N.NOM_QNA_CAPTURA
                              AND H.HP_NUM_COMPLEM = N.NOM_NUM_COMPLEM
                              AND H.ID_TIPO_NOMINA = N.ID_TIPO_NOMINA
                              AND H.HP_FOLIO = C.CP_FOLIO
                              AND H.HP_DIF_FOLIO = C.CP_DIF_FOLIO
                              AND H.ID_TIPO_NOMINA = T.ID_TIPO_NOMINA
                              AND H.ID_GRUPOPAGO_NOM = G.ID_GRUPO_PAGO
                              AND N.NOM_CERRADA = E.ID_EDO_NOM
                              AND C.ID_TIPO_CPTO = CP.ID_TIPO_CPTO
                              AND C.ID_CPTO_PAGO = CP.ID_CONCEPTO
                              AND ##H.HP_EJER_FISCAL##
                              AND ##H.HP_QNA_PAGO##
                              AND ##H.ID_TIPO_NOMINA##
                              AND ##H.ID_GRUPOPAGO_NOM##
                              AND ##N.ID_EDO_NOM##
                            group by H.HP_QNA_PAGO, H.HP_NUM_COMPLEM, N.DESC_NOMINA, T.DESC_TIPO_NOMINA, G.DESC_GRUPO_PAGO, E.DESCRIBE_EDO_NOM,
                                  N.NOM_FEC_CREACION, N.NOM_FEC_ANEXO20, N.NOM_FEC_TIMBRADO, H.HP_CONSEC_NOMINA,
                                  N.NOM_REF_TIMBRADO, N.NOM_FEC_CANC_SIREH, N.NOM_FEC_CANC_SAT, N.NOM_REF_SAT, N.ID_EDO_NOM
                            ORDER BY H.HP_QNA_PAGO, H.HP_NUM_COMPLEM
                </prop>
                <prop key="defNomEjercicioG"> 
                    SELECT H.HP_QNA_PAGO qnaPago,
                           NVL(N.DESC_NOMINA,'...') tipoNomina,
                           H.HP_CONSEC_NOMINA consecNomina,
                           H.HP_NUM_COMPLEM numComplem, 
                           G.DESC_GRUPO_PAGO gpoPago
                    FROM TN_HISTORICO_PAGO H, TN_CONCEPTO_PAGADO C, TN_NOMINA N, TC_TIPO_NOMINA T, TC_GRUPO_PAGO G, TC_ESTADO_NOMINA E, TC_CONCEPTO_PAGO CP
                    WHERE ##h.HP_EJER_FISCAL##
                      AND H.ID_TIPO_NOMINA NOT IN ('SA','FO')
                      AND H.HP_QNA_PAGO = N.NOM_QNA_CAPTURA
                      AND H.HP_NUM_COMPLEM = N.NOM_NUM_COMPLEM
                      AND H.ID_TIPO_NOMINA = N.ID_TIPO_NOMINA
                      AND H.HP_FOLIO = C.CP_FOLIO
                      AND H.HP_DIF_FOLIO = C.CP_DIF_FOLIO
                      AND H.ID_TIPO_NOMINA = T.ID_TIPO_NOMINA
                      AND H.ID_GRUPOPAGO_NOM = G.ID_GRUPO_PAGO
                      AND N.NOM_CERRADA = E.ID_EDO_NOM
                      AND C.ID_TIPO_CPTO = CP.ID_TIPO_CPTO
                      AND C.ID_CPTO_PAGO = CP.ID_CONCEPTO
                    group by H.HP_QNA_PAGO, H.HP_NUM_COMPLEM, N.DESC_NOMINA, T.DESC_TIPO_NOMINA, G.DESC_GRUPO_PAGO, E.DESCRIBE_EDO_NOM,
                             N.NOM_FEC_CREACION, N.NOM_FEC_ANEXO20, N.NOM_FEC_TIMBRADO, H.HP_CONSEC_NOMINA,
                             N.NOM_REF_TIMBRADO, N.NOM_FEC_CANC_SIREH, N.NOM_FEC_CANC_SAT, N.NOM_REF_SAT
                    ORDER BY H.HP_QNA_PAGO, H.HP_NUM_COMPLEM    
                </prop>
                <prop key="EmpleadosHus">
                    select e.RFC_EMPLEADO,
                           e.NOMBRE_EMPLEADO,
                           e.PRIMER_APELLIDO,
                           e.SEGUNDO_APELLIDO,
                           e.CURP_EMPLEADO
                    from td_empleado e
                    where 1 = 1 
                      and ROWNUM <![CDATA[<]]> 200
                </prop>
                <prop key="cicloEmisionFonac">
                    SELECT UNI_CICLO, UNI_CICLO cicloEmision
                    FROM TC_UNIDAD
                    GROUP BY UNI_CICLO
                    ORDER BY UNI_CICLO DESC
                </prop>
                <prop key="tdVacaciones-paginador-autorizar">
                    SELECT  V.ID_ESTATUS,
                            V.ID_ESTATUS || ' - ' || VE.DESC_ESTATUS DESCESTATUS,
                            U.ID_UNIDAD || ' - ' || U.DESC_UNIDAD DESCUNIDAD,
                            V.VAC_RFC,
                            P.DESC_PUESTO,
                            E.NOMBRE_EMPLEADO || ' ' || E.PRIMER_APELLIDO || ' ' || E.SEGUNDO_APELLIDO NOMBRE, 
                            T.ID_TIPO || ' - ' || T.DESC_TIPO DESCTIPO,
                            V.VAC_CICLO,
                            V.ID_PERIODO || ' - ' || VP.DESC_PERIODO DESC_PERIODO,
                            V.VAC_DIAS_SOLICITA,
                            V.VAC_DIAS_RESTA,
                            V.VAC_FECHA_INI,
                            V.VAC_FECHA_FIN,
                            V.FEC_MODIFICO
                    FROM    TD_VACACIONES V, TC_VACACIONES_ESTATUS VE, TC_UNIDAD U, TC_PUESTO P, TD_EMPLEADO E, TC_VACACIONES_TIPOS T, TC_VACACIONES_PERIOD VP
                     where  V.ID_ESTATUS = VE.ID_ESTATUS
                            AND V.ID_UNIDAD = U.ID_UNIDAD
                            AND V.VAC_CICLO = U.UNI_CICLO
                            AND V.ID_PUESTO = P.ID_PUESTO
                            AND V.VAC_RFC = E.RFC_EMPLEADO
                            AND V.ID_TIPO_VACS = T.ID_TIPO
                            AND V.ID_PERIODO = VP.ID_PERIODO
                </prop>
                <prop key="tdVacaciones-paginador-solicitar">
                    SELECT  V.ID_ESTATUS,
                            V.ID_ESTATUS || ' - ' || VE.DESC_ESTATUS DESCESTATUS,
                            U.ID_UNIDAD || ' - ' || U.DESC_UNIDAD DESCUNIDAD,
                            V.VAC_RFC,
                            P.DESC_PUESTO,
                            E.NOMBRE_EMPLEADO || ' ' || E.PRIMER_APELLIDO || ' ' || E.SEGUNDO_APELLIDO NOMBRE, 
                            T.ID_TIPO || ' - ' || T.DESC_TIPO DESCTIPO,
                            V.VAC_CICLO,
                            V.ID_PERIODO || ' - ' || VP.DESC_PERIODO DESC_PERIODO,
                            V.VAC_DIAS_SOLICITA,
                            V.VAC_DIAS_RESTA,
                            V.VAC_FECHA_INI,
                            V.VAC_FECHA_FIN,
                            V.FEC_MODIFICO
                    FROM    TD_VACACIONES V, TC_VACACIONES_ESTATUS VE, TC_UNIDAD U, TC_PUESTO P, TD_EMPLEADO E, TC_VACACIONES_TIPOS T, TC_VACACIONES_PERIOD VP
                     where  V.ID_ESTATUS = VE.ID_ESTATUS
                            AND V.ID_UNIDAD = U.ID_UNIDAD
                            AND V.VAC_CICLO = U.UNI_CICLO
                            AND V.ID_PUESTO = P.ID_PUESTO
                            AND V.VAC_RFC = E.RFC_EMPLEADO
                            AND V.ID_TIPO_VACS = T.ID_TIPO
                            AND V.ID_PERIODO = VP.ID_PERIODO
                </prop>
                <prop key="tcVacacionesPeriodos">
                    SELECT  ID_PERIODO, DESC_PERIODO
                    FROM    TC_VACACIONES_PERIOD
                            ORDER BY 1
                </prop>
                <prop key="tcVacacionesTipos">
                    SELECT  ID_TIPO, DESC_TIPO
                    FROM    TC_VACACIONES_TIPOS
                            ORDER BY ID_TIPO
                </prop>
                <prop key="tcVacacionesMovimientos">
                    SELECT  ID_MOVIMIENTO,  DESC_MOVIMIENTO
                    FROM    TC_VACACIONES_MOVTOS
                </prop>
                <prop key="diasSolicitadosVacaciones">
                    Select Rownum clave, Rownum valor
                    From dual
                    Connect By Rownum <![CDATA[<=]]> 10
                </prop>
                <prop key="tcVacacionesMotivos">
                    SELECT  ID_MOTIVO, DESC_MOTIVO
                    FROM    TC_VACACIONES_MOTIVO
                </prop>
                <prop key="cicloVacaciones">
                    SELECT  max(SUBSTR(RC_QNA_CAPTURA,0,4)) + 0 di, max(SUBSTR(RC_QNA_CAPTURA,0,4)) + 0 ciclo
                    FROM    tn_reg_control     
                    union
                    SELECT  max(SUBSTR(RC_QNA_CAPTURA,0,4)) + 1 di, max(SUBSTR(RC_QNA_CAPTURA,0,4)) + 1  ciclo
                    FROM    tn_reg_control
                </prop>
                <prop key="tcVacacionesEstatus">
                    SELECT  ID_ESTATUS, DESC_ESTATUS
                    FROM    TC_VACACIONES_ESTATUS
                            ORDER BY 1 ASC
                </prop>
                <prop key="empleadosConstancias">
                    select * from (select e.rc_rfc RFC,
                           e.c5 primer_apellido,
                           e.c6 segundo_apellido,
                           e.c7 nombre,
                           e.c4 curp,
                           e.ID_UNIDAD unidad,
                           u.DESC_UNIDAD desc_unidad
                    from td_reporte_constancia e,tc_unidad u
                    where e.id_unidad = u.ID_UNIDAD
                      and u.uni_ciclo = (select max(c.rc_ejercicio)
                                         from td_reporte_constancia c
                                         where e.rc_rfc = c.rc_rfc)
                      AND ##e.ID_UNIDAD#SIREHUNIDAD#PRIMARY##
                    group by e.rc_rfc,
                           e.c5,
                           e.c6,
                           e.c7,
                           e.c4,
                           e.ID_UNIDAD,
                           u.DESC_UNIDAD)
                </prop>
                <prop key="listadoConstanciaDeSueldo">
                    SELECT  RC_EJERCICIO as CICLO, ID_NIVEL_PTO as NIVEL, ID_UNIDAD as UNIDAD, RC_RFC as RFCEMPLEADO, C7 || ' ' || C5 || '' || C6 as NOMBREEMPLEADO
                    FROM    TD_REPORTE_CONSTANCIA
                    WHERE   ##RC_RFC##
                            ORDER BY RC_EJERCICIO DESC
                </prop>
                <prop key="ejercicioConstanciaDesueldo">
                    SELECT  RC_EJERCICIO di, RC_EJERCICIO ciclo
                    FROM    TD_REPORTE_CONSTANCIA
                    GROUP BY RC_EJERCICIO
                    ORDER BY RC_EJERCICIO DESC
                </prop>
                <prop key="curpHijosByRfc">
                    SELECT rh.trh_nombre||' '||rh.trh_primer||' '||rh.trh_segundo nombreHijo,
                           rh.trh_curP, rh.usuario, rh.fec_modifico
                    FROM td_rusp_hijo rh
                    WHERE ##rh.trh_rfc##
                </prop>
                <prop key="lenguaByRfc">
                    SELECT rl.trl_lengua, tl.desc_lengua, 
                           case when rl.trl_tipo = 'M' then rl.trl_tipo||' -  Materna'
                           else rl.trl_tipo||' -  Aprendida' end tipolengua, rl.usuario, rl.fec_modifico
                    FROM td_rusp_lengua rl
                        ,tc_lengua_idioma tl
                    WHERE ##rl.trl_rfc##
                      and rl.trl_lengua = tl.li_codigo
                </prop>
                <prop key="tcPtoEstrategico">
                    SELECT  ID_PTO_ESTRATEGICO as key, ID_PTO_ESTRATEGICO || ' - ' || DESC_PTO_ESTR as value
                    FROM    TC_PTO_ESTRATEGICO
                            order by 1
                </prop>
                <prop key="tcNivelPto">
                    SELECT  ID_NIVEL_PTO key, ID_NIVEL_PTO value
                    FROM    TC_NIVEL_PTO
                            order by 1
                </prop>
                <prop key="tcNombramientoo">
                    SELECT  ID_NOMBRAMIENTO as key, ID_NOMBRAMIENTO || ' - ' || DESC_NOMBRAMIENTO as value
                    FROM    TC_NOMBRAMIENTO
                            order by 1
                </prop>
                <prop key="tcJerarquiaa">
                    SELECT  ID_JERARQUIA as key, ID_JERARQUIA || ' - ' || DESC_JERARQUIA as value
                    FROM    TC_JERARQUIA
                            order by 1
                </prop>
                <prop key="tcMunicipioo">
                    SELECT  ID_MUNICIPIO as key, ID_MUNICIPIO || ' - ' || DESC_MUNICIPIO as value
                    FROM    TC_MUNICIPIO
                    WHERE   ##ID_EDO##
                            order by 1
                </prop>
                <prop key="tcNacionalidad">
                    SELECT  ID_NACIONALIDAD as key, ID_NACIONALIDAD || ' - ' || DESC_NACIONALIDAD as value
                    FROM    TC_NACIONALIDAD
                            order by 1
                </prop>
                <prop key="tcIstProtCivil">
                    SELECT  ID_INST_PROT_CIV as key, ID_INST_PROT_CIV || ' - ' || DESC_INST_PROT_CIV as value
                    FROM    TC_INST_PROT_CIV
                            order by 1
                </prop>
            </props>
        </property>
    </bean>
</beans>
